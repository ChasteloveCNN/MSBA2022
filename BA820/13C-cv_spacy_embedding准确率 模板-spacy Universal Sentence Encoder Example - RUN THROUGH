{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"13C-cv/spacy/embedding准确率 模板-spacy Universal Sentence Encoder Example - RUN THROUGH","provenance":[{"file_id":"1Uvdr09Aitq4IQHTj5Yb-WkoUWE4g_d5X","timestamp":1638822047537}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"RED1075x1ZLA"},"source":["# Universal Sentence Encoder\n","\n","- Go beyond averaging word/token vectors and learn a representation of longer text\n","- Of course we can plug it into spacy\n","\n"]},{"cell_type":"markdown","metadata":{"id":"87GMNdva0PFo"},"source":["\n","\n","\n","\n","![alt](https://amitness.com/images/use-deep-averaging-network-variant.png)\n","\n","\n","> Two approaches proposed in the paper.  Regardless of the architecture, the key point is that we can learn a representation from longer text, not a specific token, just like Doc2Vec (directionally similar, different architectures).\n","\n","\n","![](https://amitness.com/images/use-overall-pipeline.png)\n","\n","### Spacy implementation repo\n","\n","- https://github.com/MartinoMensio/spacy-universal-sentence-encoder"]},{"cell_type":"code","metadata":{"id":"z4QeeV6NRO5F"},"source":["# installs\n","! pip install -U spacy\n","! pip install spacy-universal-sentence-encoder"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IXjyVis4RjIL"},"source":["# imports\n","import spacy \n","from spacy import cli\n","import spacy_universal_sentence_encoder"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t0NBve2-28EC","executionInfo":{"status":"ok","timestamp":1638799445475,"user_tz":300,"elapsed":7419,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"2edca76f-5864-4f5f-8609-f0760b1f3ac6"},"source":["# download the normal model\n","model = \"en_core_web_md\"\n","cli.download(model)\n","nlp = spacy.load(model)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n","You can now load the package via spacy.load('en_core_web_md')\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rFAv8svIRycJ","executionInfo":{"status":"ok","timestamp":1638799465428,"user_tz":300,"elapsed":19956,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"e40e99fc-080d-4ab9-c268-0fd980353ee9"},"source":["# add the pipe\n","nlp.add_pipe('universal_sentence_encoder', config={'enable_cache': False, 'model_name':'en_use_md'})"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloaded https://tfhub.dev/google/universal-sentence-encoder/4, Total size: 987.47MB\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<spacy_universal_sentence_encoder.language.UniversalSentenceEncoder at 0x7ff0d75f70d0>"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"Rs-w2Y3tYNTi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638799465429,"user_tz":300,"elapsed":7,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"c3d86ef6-a1b6-4a6f-9e8a-39e301681442"},"source":["nlp.pipe_names"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['tok2vec',\n"," 'tagger',\n"," 'parser',\n"," 'attribute_ruler',\n"," 'lemmatizer',\n"," 'ner',\n"," 'universal_sentence_encoder']"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"cu8LA6d6R3Js"},"source":["# a simple document\n","doc1 = nlp(\"Brock likes to play golf\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"r1aZWnQ0SPwT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638799466020,"user_tz":300,"elapsed":594,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"2e7b4dd8-aa97-4ff9-c972-390a12c51408"},"source":["# this overrides the vectors from spacy, but keeps all of the other pipelines\n","doc1.vector.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(512,)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o_XAUI2USUe6","executionInfo":{"status":"ok","timestamp":1638799466021,"user_tz":300,"elapsed":15,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"8fa400f2-5572-4792-8f4f-c91366cc6dbd"},"source":["nlp(\"golf\").vector[:10]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-0.04744115, -0.01159287, -0.04089102,  0.02818364,  0.00508108,\n","        0.08147769, -0.02348234, -0.01945268,  0.04790414,  0.03702942],\n","      dtype=float32)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"3asMDOwySVKS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638799466021,"user_tz":300,"elapsed":6,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"2a3c39a6-90cc-4522-be65-5a840a42eabe"},"source":["# or a span\n","doc = nlp(\"write code in python\")\n","type(doc[3:])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["spacy.tokens.span.Span"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"CU46G0M04hAo"},"source":["# quick experiment\n","# document classifiation with count vectors, spacy vectors, use\n","# the same dataset from the last challenge\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZUqGx1Nq4qIC"},"source":["# Experiment - Which does Better?\n","\n","- We will use the same dataset for the last challenge (SanFran News Categories) and evaluate the lift for the approaches we have covered in class.\n","\n","1.  CountVectorizer\n","1.  Spacy Pre-trained token vectors\n","1.  Google Universal Sentence Encoders"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BBOXPzYY5mXW","executionInfo":{"status":"ok","timestamp":1638799469797,"user_tz":300,"elapsed":3780,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"25f0e65f-a74b-469d-d5a8-328b34a1dbe8"},"source":["# first, download the git repo\n","! git clone https://github.com/Btibert3/BA820-Fall-2021.git"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'BA820-Fall-2021'...\n","remote: Enumerating objects: 729, done.\u001b[K\n","remote: Counting objects: 100% (729/729), done.\u001b[K\n","remote: Compressing objects: 100% (559/559), done.\u001b[K\n","remote: Total 729 (delta 344), reused 493 (delta 136), pack-reused 0\u001b[K\n","Receiving objects: 100% (729/729), 18.65 MiB | 10.05 MiB/s, done.\n","Resolving deltas: 100% (344/344), done.\n"]}]},{"cell_type":"code","metadata":{"id":"9tG16P4H5mbl"},"source":["# make sure we have the imports\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns \n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import accuracy_score\n","\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"KhF_841Y5mes","executionInfo":{"status":"ok","timestamp":1638799470380,"user_tz":300,"elapsed":10,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"28d0cac4-12ac-4c3c-9469-79694d67b6a6"},"source":["# read in the training set\n","train = pd.read_csv(\"/content/BA820-Fall-2021/data-challenges/12-news-classification/train.csv\")\n","train.sample(3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>category</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>25</th>\n","      <td>80.0</td>\n","      <td>Food</td>\n","      <td>With the possible exception of State Bird Prov...</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>143.0</td>\n","      <td>Food</td>\n","      <td>Earlier this month, state lawmakers passed the...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>87.0</td>\n","      <td>Food</td>\n","      <td>The new owner of San Francisco‚Äôs historic An...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       id category                                               text\n","25   80.0     Food  With the possible exception of State Bird Prov...\n","76  143.0     Food  Earlier this month, state lawmakers passed the...\n","0    87.0     Food  The new owner of San Francisco‚Äôs historic An..."]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QYHX3Vtg5mhZ","executionInfo":{"status":"ok","timestamp":1638799472096,"user_tz":300,"elapsed":1721,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"d94346b9-061a-430c-aac1-84d7561b719e"},"source":["# make sure we have the old spacy model\n","nlp_old = spacy.load(model)\n","nlp_old.pipe_names"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['tok2vec', 'tagger', 'parser', 'attribute_ruler', 'lemmatizer', 'ner']"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TczXt4795mka","executionInfo":{"status":"ok","timestamp":1638799484996,"user_tz":300,"elapsed":12904,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"359db7f1-ab84-4be1-d3d1-0e6236868102"},"source":["# create the 3 representations\n","\n","# cv\n","cv = CountVectorizer()\n","cv.fit(train.text)\n","dtm = cv.transform(train.text)\n","print(dtm.shape)\n","\n","# spacy vectors\n","docs = list(nlp_old.pipe(train.text, disable=['tagger', 'parser', 'attribute_ruler', 'lemmatizer', 'ner']))\n","dvs = [doc.vector for doc in docs]\n","dvs = np.array(dvs)\n","print(dvs.shape)\n","\n","# the use embeddings\n","uses = list(nlp.pipe(train.text, disable=['tagger', 'parser', 'attribute_ruler', 'lemmatizer', 'ner']))\n","uvs = [doc.vector for doc in uses]\n","uvs = np.array(uvs)\n","print(uvs.shape)\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(100, 13742)\n","(100, 300)\n","(100, 512)\n"]}]},{"cell_type":"code","metadata":{"id":"yDFEVSU95mnh"},"source":["# fit the models\n","\n","# count vects\n","knn = KNeighborsClassifier(3)\n","knn.fit(dtm.toarray(), train.category)\n","preds_cv = knn.predict(dtm.toarray())\n","\n","# spacy pretrained\n","knn = KNeighborsClassifier(3)\n","knn.fit(dvs, train.category)\n","preds_spacy = knn.predict(dvs)\n","\n","# universal sentence encodings\n","knn = KNeighborsClassifier(3)\n","knn.fit(uvs, train.category)\n","preds_use = knn.predict(uvs)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JmJvuGOp5mqG"},"source":["# put everything back\n","train[['cv', 'spacy', 'use']] = np.stack([preds_cv, preds_spacy, preds_use], axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"vLzWqc6s5msp","executionInfo":{"status":"ok","timestamp":1638799484997,"user_tz":300,"elapsed":19,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"2936579f-b4fd-496a-927c-eccb7406ade2"},"source":["train.head(3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>category</th>\n","      <th>text</th>\n","      <th>cv</th>\n","      <th>spacy</th>\n","      <th>use</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>87.0</td>\n","      <td>Food</td>\n","      <td>The new owner of San Francisco‚Äôs historic An...</td>\n","      <td>Food</td>\n","      <td>Food</td>\n","      <td>Food</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>57.0</td>\n","      <td>Food</td>\n","      <td>It was a taste of date syrup that made Sylvie ...</td>\n","      <td>Food</td>\n","      <td>Food</td>\n","      <td>Food</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>92.0</td>\n","      <td>Other</td>\n","      <td>When Lers Ros opened its original location on ...</td>\n","      <td>Other</td>\n","      <td>Other</td>\n","      <td>Other</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     id category  ...  spacy    use\n","0  87.0     Food  ...   Food   Food\n","1  57.0     Food  ...   Food   Food\n","2  92.0    Other  ...  Other  Other\n","\n","[3 rows x 6 columns]"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tOf185jMQJwc","executionInfo":{"status":"ok","timestamp":1638804305531,"user_tz":300,"elapsed":218,"user":{"displayName":"Brock Tibert","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjxqohVmiWG6qzVY3M92kDQLqtAD57w13HJuCD-=s64","userId":"13148801170360632626"}},"outputId":"0551203c-f419-4680-d32c-e5b49d7be4a5"},"source":["# accuracy\n","accuracy_score(train.category, train.cv)\n","accuracy_score(train.category, train.spacy)\n","accuracy_score(train.category, train.use)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.77"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"a2c1K55Dajwm"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BF5kzTfLQJtd"},"source":["## spacy actually won classification accuracy"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"26De91PqQJoQ"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_mjlyULL5mvP"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qbJgUcV45mxi"},"source":["# Where to go next\n","\n","- https://transformer.huggingface.co/ (some webapps to play around!)\n","- try different models\n","- HuggingFace (https://huggingface.co/)\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"ipGP7aM9VUo4"},"source":[""],"execution_count":null,"outputs":[]}]}