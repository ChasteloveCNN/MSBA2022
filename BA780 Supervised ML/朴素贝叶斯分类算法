{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"朴素贝叶斯分类算法","provenance":[],"authorship_tag":"ABX9TyMjfn08/XWQPWdB/ZTckMTB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"aLjfuHw0gD5t","executionInfo":{"status":"ok","timestamp":1639679339358,"user_tz":300,"elapsed":408,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["from numpy import *"]},{"cell_type":"code","source":["# 过滤网站的恶意留言  侮辱性：1     非侮辱性：0\n","# 创建一个实验样本\n","def loadDataSet():\n","   postingList = [['my','dog','has','flea','problems','help','please'],\n","            ['maybe','not','take','him','to','dog','park','stupid'],\n","            ['my','dalmation','is','so','cute','I','love','him'],\n","            ['stop','posting','stupid','worthless','garbage'],\n","            ['mr','licks','ate','my','steak','how','to','stop','him'],\n","            ['quit','buying','worthless','dog','food','stupid']]\n","   classVec = [0,1,0,1,0,1]\n","   return postingList, classVec\n"," "],"metadata":{"id":"YTuzz0DwgHJa","executionInfo":{"status":"ok","timestamp":1639679408319,"user_tz":300,"elapsed":575,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["#创建一个包含在所有文档中出现的不重复词的列表\n","def createVocabList(dataSet):\n","    vocabSet = set([])      # 创建一个空集\n","    for document in dataSet:\n","        vocabSet = vocabSet | set(document)   # 创建两个集合的并集\n","    return list(vocabSet)\n"," "],"metadata":{"id":"j08TpUHLgHHW","executionInfo":{"status":"ok","timestamp":1639681171637,"user_tz":300,"elapsed":378,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# 将文档词条转换成词向量\n","def setOfWords2Vec(vocabList, inputSet):\n","    returnVec = [0]*len(vocabList)        # 创建一个其中所含元素都为0的向量\n","    for word in inputSet:\n","        if word in vocabList:\n","            # returnVec[vocabList.index(word)] = 1     # index函数在字符串里找到字符第一次出现的位置  词集模型\n","            returnVec[vocabList.index(word)] += 1      # 文档的词袋模型    每个单词可以出现多次\n","        else: print('the word: %s is not in my Vocabulary!') % word\n","    return returnVec"],"metadata":{"id":"J82uDJozgHFZ","executionInfo":{"status":"ok","timestamp":1639681309110,"user_tz":300,"elapsed":399,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# 朴素贝叶斯分类器训练函数   从词向量计算概率\n","def trainNB0(trainMatrix, trainCategory):\n","    numTrainDocs = len(trainMatrix)\n","    numWords = len(trainMatrix[0])\n","    pAbusive = sum(trainCategory)/float(numTrainDocs)\n","    # p0Num = zeros(numWords); p1Num = zeros(numWords)\n","    # p0Denom = 0.0; p1Denom = 0.0\n","    p0Num = ones(numWords);   # 避免一个概率值为0,最后的乘积也为0\n","    p1Num = ones(numWords);   # 用来统计两类数据中，各词的词频\n","    p0Denom = 2.0;  # 用于统计0类中的总数\n","    p1Denom = 2.0  # 用于统计1类中的总数\n","    for i in range(numTrainDocs):\n","        if trainCategory[i] == 1:\n","            p1Num += trainMatrix[i]\n","            p1Denom += sum(trainMatrix[i])\n","        else:\n","            p0Num += trainMatrix[i]\n","            p0Denom += sum(trainMatrix[i])\n","            # p1Vect = p1Num / p1Denom\n","            # p0Vect = p0Num / p0Denom\n","    p1Vect = log(p1Num / p1Denom)    # 在类1中，每个次的发生概率\n","    p0Vect = log(p0Num / p0Denom)      # 避免下溢出或者浮点数舍入导致的错误   下溢出是由太多很小的数相乘得到的\n","    return p0Vect, p1Vect, pAbusive"],"metadata":{"id":"KRvRSjeHgHDN","executionInfo":{"status":"ok","timestamp":1639681399579,"user_tz":300,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# 朴素贝叶斯分类器\n","def classifyNB(vec2Classify, p0Vec, p1Vec, pClass1):\n","    p1 = sum(vec2Classify*p1Vec) + log(pClass1)\n","    p0 = sum(vec2Classify*p0Vec) + log(1.0-pClass1)\n","    if p1 > p0:\n","        return 1\n","    else:\n","        return 0"],"metadata":{"id":"Ws5NHwTngHBK","executionInfo":{"status":"ok","timestamp":1639681515260,"user_tz":300,"elapsed":395,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["def testingNB():\n","    listOPosts, listClasses = loadDataSet()\n","    myVocabList = createVocabList(listOPosts)\n","    trainMat = []\n","    for postinDoc in listOPosts:\n","        trainMat.append(setOfWords2Vec(myVocabList, postinDoc))\n","    p0V, p1V, pAb = trainNB0(array(trainMat), array(listClasses))\n","    \n","    testEntry = ['love','my','dalmation']\n","    thisDoc = array(setOfWords2Vec(myVocabList, testEntry))\n","    print(testEntry, 'classified as: ', classifyNB(thisDoc, p0V, p1V, pAb))\n","    \n","    testEntry = ['stupid','garbage']\n","    thisDoc = array(setOfWords2Vec(myVocabList, testEntry))\n","    print(testEntry, 'classified as: ', classifyNB(thisDoc, p0V, p1V, pAb))\n","    \n","    testEntry = ['stop','stupid','stupid','stupid','stupid','stupid']\n","    thisDoc = array(setOfWords2Vec(myVocabList, testEntry))\n","    print(testEntry, 'classified as: ', classifyNB(thisDoc, p0V, p1V, pAb))\n","\n","    testEntry = ['love','my','dalmation','stop','stupid','stupid','stupid','stupid','stupid']\n","    thisDoc = array(setOfWords2Vec(myVocabList, testEntry))\n","    print(testEntry, 'classified as: ', classifyNB(thisDoc, p0V, p1V, pAb))"],"metadata":{"id":"9ABjXLxxgG-4","executionInfo":{"status":"ok","timestamp":1639681850594,"user_tz":300,"elapsed":364,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["testingNB()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UNvjcVrqgG8u","executionInfo":{"status":"ok","timestamp":1639681852167,"user_tz":300,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"e301c7a2-8b14-4584-ea4f-3e4a21eb8340"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["['love', 'my', 'dalmation'] classified as:  0\n","['stupid', 'garbage'] classified as:  1\n","['stop', 'stupid', 'stupid', 'stupid', 'stupid', 'stupid'] classified as:  1\n","['love', 'my', 'dalmation', 'stop', 'stupid', 'stupid', 'stupid', 'stupid', 'stupid'] classified as:  1\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"G9v6uNrEgG6h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"ETVTgslzgG4p"},"execution_count":null,"outputs":[]}]}