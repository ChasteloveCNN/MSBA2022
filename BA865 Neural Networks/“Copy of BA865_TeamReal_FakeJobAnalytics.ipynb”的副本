{"cells":[{"cell_type":"markdown","metadata":{"id":"fVp6WAhEY8Oq"},"source":["##BA865 Team Real - Fake Job Analyise\n","Members: Yipeng(Caroline) Guo: ypguo@bu.edu\n","\n","Yilun(Allen) Wang: yilun830@bu.edu\n","\n","Niming(Danny) Wang: wang2021@bu.edu\n","\n","Mochi Zhang: zhangmc@bu.edu\n","\n","Chunxiaqiu(Tommy) Yang: chunqiu@bu.edu\n","\n"]},{"cell_type":"markdown","metadata":{"id":"DuDkJRYhbI0H"},"source":["#Business Problem & Motivation\n","The problem motivates us is the possibility of identifying fake job recruiting news\n","\n","\n","1.   Recognition of fake job posting by deep learning (NN) technologies, including transfering text into code, MLP model trainging and testing.\n","2.   Exploration of creating fraud testing system to ensure safe hiring environment.\n","\n","The rational behind this is that, with the growth of unemployed and job gaps due to economic stres and Covid impcat, there are multiple websites or Apps that provide job recruting, applying, and other posting. However, scammers may take advantage of this and post fake job information to gather applicants' personal information and privacy. The project aims to distinguish real and fake job recruiting news.\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"d3SiOTlZgnm0"},"source":["##Dataset\n","\n","https://www.kaggle.com/shivamb/real-or-fake-fake-jobposting-prediction\n","\n","The Employment Scam Aegean Dataset was explicitly granted and acknowledged by the Laboratory of Information & Communication System Security, The University of the Aegean (http://emscad.samos.aegean.gr/). With thousands of hiring news collected with their detailed description, it allows us to dig deeper than we would imagine. This dataset contains 18K posting entries with 18 features captured, out of which about 800 are fake. It consists of both textual information and meta-information about the jobs."]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":36923,"status":"ok","timestamp":1647396188760,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"},"user_tz":240},"id":"Fkfw8enWjpdu","outputId":"392d0a50-e56c-4114-c386-a788dab92deb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: mlxtend in /usr/local/lib/python3.7/dist-packages (0.14.0)\n","Requirement already satisfied: numpy>=1.10.4 in /usr/local/lib/python3.7/dist-packages (from mlxtend) (1.21.5)\n","Requirement already satisfied: scikit-learn>=0.18 in /usr/local/lib/python3.7/dist-packages (from mlxtend) (1.0.2)\n","Requirement already satisfied: scipy>=0.17 in /usr/local/lib/python3.7/dist-packages (from mlxtend) (1.4.1)\n","Requirement already satisfied: matplotlib>=1.5.1 in /usr/local/lib/python3.7/dist-packages (from mlxtend) (3.2.2)\n","Requirement already satisfied: pandas>=0.17.1 in /usr/local/lib/python3.7/dist-packages (from mlxtend) (1.3.5)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from mlxtend) (57.4.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.5.1->mlxtend) (3.0.7)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.5.1->mlxtend) (2.8.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.5.1->mlxtend) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.5.1->mlxtend) (0.11.0)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.17.1->mlxtend) (2018.9)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib>=1.5.1->mlxtend) (1.15.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.18->mlxtend) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.18->mlxtend) (1.1.0)\n","Requirement already satisfied: scikit-plot in /usr/local/lib/python3.7/dist-packages (0.3.7)\n","Requirement already satisfied: matplotlib>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (3.2.2)\n","Requirement already satisfied: joblib>=0.10 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (1.1.0)\n","Requirement already satisfied: scikit-learn>=0.18 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (1.0.2)\n","Requirement already satisfied: scipy>=0.9 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (1.4.1)\n","Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (1.21.5)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (3.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (0.11.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (2.8.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (1.3.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib>=1.4.0->scikit-plot) (1.15.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.18->scikit-plot) (3.1.0)\n","Requirement already satisfied: newspaper3k in /usr/local/lib/python3.7/dist-packages (0.2.8)\n","Requirement already satisfied: tldextract>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (3.2.0)\n","Requirement already satisfied: nltk>=3.2.1 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (3.2.5)\n","Requirement already satisfied: requests>=2.10.0 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (2.23.0)\n","Requirement already satisfied: PyYAML>=3.11 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (6.0)\n","Requirement already satisfied: cssselect>=0.9.2 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (1.1.0)\n","Requirement already satisfied: tinysegmenter==0.3 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (0.3)\n","Requirement already satisfied: beautifulsoup4>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (4.6.3)\n","Requirement already satisfied: python-dateutil>=2.5.3 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (2.8.2)\n","Requirement already satisfied: Pillow>=3.3.0 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (7.1.2)\n","Requirement already satisfied: jieba3k>=0.35.1 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (0.35.1)\n","Requirement already satisfied: feedfinder2>=0.0.4 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (0.0.4)\n","Requirement already satisfied: lxml>=3.6.0 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (4.2.6)\n","Requirement already satisfied: feedparser>=5.2.1 in /usr/local/lib/python3.7/dist-packages (from newspaper3k) (6.0.8)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from feedfinder2>=0.0.4->newspaper3k) (1.15.0)\n","Requirement already satisfied: sgmllib3k in /usr/local/lib/python3.7/dist-packages (from feedparser>=5.2.1->newspaper3k) (1.0.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->newspaper3k) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->newspaper3k) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->newspaper3k) (2021.10.8)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->newspaper3k) (1.24.3)\n","Requirement already satisfied: filelock>=3.0.8 in /usr/local/lib/python3.7/dist-packages (from tldextract>=2.0.1->newspaper3k) (3.6.0)\n","Requirement already satisfied: requests-file>=1.4 in /usr/local/lib/python3.7/dist-packages (from tldextract>=2.0.1->newspaper3k) (1.5.1)\n","Requirement already satisfied: spacy in /usr/local/lib/python3.7/dist-packages (3.2.3)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (1.0.6)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy) (3.0.6)\n","Requirement already satisfied: blis<0.8.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (0.4.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from spacy) (2.11.3)\n","Requirement already satisfied: wasabi<1.1.0,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from spacy) (0.9.0)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (2.23.0)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.8 in /usr/local/lib/python3.7/dist-packages (from spacy) (3.0.9)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (3.3.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy) (57.4.0)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (1.0.1)\n","Requirement already satisfied: typing-extensions<4.0.0.0,>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy) (3.10.0.2)\n","Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (1.21.5)\n","Requirement already satisfied: typer<0.5.0,>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (0.4.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (21.3)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.7/dist-packages (from spacy) (2.0.6)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.1 in /usr/local/lib/python3.7/dist-packages (from spacy) (2.4.2)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy) (2.0.6)\n","Requirement already satisfied: thinc<8.1.0,>=8.0.12 in /usr/local/lib/python3.7/dist-packages (from spacy) (8.0.15)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.7/dist-packages (from spacy) (4.63.0)\n","Requirement already satisfied: pathy>=0.3.5 in /usr/local/lib/python3.7/dist-packages (from spacy) (0.6.1)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<1.9.0,>=1.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy) (1.8.2)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from catalogue<2.1.0,>=2.0.6->spacy) (3.7.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->spacy) (3.0.7)\n","Requirement already satisfied: smart-open<6.0.0,>=5.0.0 in /usr/local/lib/python3.7/dist-packages (from pathy>=0.3.5->spacy) (5.2.1)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2021.10.8)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (3.0.4)\n","Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.7/dist-packages (from typer<0.5.0,>=0.3.0->spacy) (7.1.2)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->spacy) (2.0.1)\n","Requirement already satisfied: textacy in /usr/local/lib/python3.7/dist-packages (0.11.0)\n","Requirement already satisfied: spacy>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (3.2.3)\n","Requirement already satisfied: jellyfish>=0.8.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (0.9.0)\n","Requirement already satisfied: pyphen>=0.10.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (0.12.0)\n","Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (2.6.3)\n","Requirement already satisfied: cytoolz>=0.10.1 in /usr/local/lib/python3.7/dist-packages (from textacy) (0.11.2)\n","Requirement already satisfied: cachetools>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (4.2.4)\n","Requirement already satisfied: tqdm>=4.19.6 in /usr/local/lib/python3.7/dist-packages (from textacy) (4.63.0)\n","Requirement already satisfied: requests>=2.10.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (2.23.0)\n","Requirement already satisfied: numpy>=1.17.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (1.21.5)\n","Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (1.4.1)\n","Requirement already satisfied: joblib>=0.13.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (1.1.0)\n","Requirement already satisfied: scikit-learn>=0.19.0 in /usr/local/lib/python3.7/dist-packages (from textacy) (1.0.2)\n","Requirement already satisfied: toolz>=0.8.0 in /usr/local/lib/python3.7/dist-packages (from cytoolz>=0.10.1->textacy) (0.11.2)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->textacy) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->textacy) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->textacy) (2021.10.8)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.10.0->textacy) (3.0.4)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.19.0->textacy) (3.1.0)\n","Requirement already satisfied: typer<0.5.0,>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (0.4.0)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.1 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (2.4.2)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (57.4.0)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (2.0.6)\n","Requirement already satisfied: wasabi<1.1.0,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (0.9.0)\n","Requirement already satisfied: pathy>=0.3.5 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (0.6.1)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (21.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (2.11.3)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.8 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (3.0.9)\n","Requirement already satisfied: blis<0.8.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (0.4.1)\n","Requirement already satisfied: typing-extensions<4.0.0.0,>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (3.10.0.2)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (1.0.1)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (2.0.6)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<1.9.0,>=1.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (1.8.2)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (3.0.6)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (1.0.6)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (3.3.0)\n","Requirement already satisfied: thinc<8.1.0,>=8.0.12 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.0->textacy) (8.0.15)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from catalogue<2.1.0,>=2.0.6->spacy>=3.0.0->textacy) (3.7.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->spacy>=3.0.0->textacy) (3.0.7)\n","Requirement already satisfied: smart-open<6.0.0,>=5.0.0 in /usr/local/lib/python3.7/dist-packages (from pathy>=0.3.5->spacy>=3.0.0->textacy) (5.2.1)\n","Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.7/dist-packages (from typer<0.5.0,>=0.3.0->spacy>=3.0.0->textacy) (7.1.2)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->spacy>=3.0.0->textacy) (2.0.1)\n","Requirement already satisfied: wordcloud in /usr/local/lib/python3.7/dist-packages (1.5.0)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from wordcloud) (7.1.2)\n","Requirement already satisfied: numpy>=1.6.1 in /usr/local/lib/python3.7/dist-packages (from wordcloud) (1.21.5)\n","Requirement already satisfied: emoji in /usr/local/lib/python3.7/dist-packages (1.7.0)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (3.2.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk) (1.15.0)\n","Requirement already satisfied: scikit-plot in /usr/local/lib/python3.7/dist-packages (0.3.7)\n","Requirement already satisfied: joblib>=0.10 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (1.1.0)\n","Requirement already satisfied: scikit-learn>=0.18 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (1.0.2)\n","Requirement already satisfied: matplotlib>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (3.2.2)\n","Requirement already satisfied: scipy>=0.9 in /usr/local/lib/python3.7/dist-packages (from scikit-plot) (1.4.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (2.8.2)\n","Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (1.21.5)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (0.11.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (1.3.2)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=1.4.0->scikit-plot) (3.0.7)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib>=1.4.0->scikit-plot) (1.15.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.18->scikit-plot) (3.1.0)\n","Requirement already satisfied: spacytextblob in /usr/local/lib/python3.7/dist-packages (4.0.0)\n","Requirement already satisfied: spacy<4.0,>=3.0 in /usr/local/lib/python3.7/dist-packages (from spacytextblob) (3.2.3)\n","Requirement already satisfied: textblob<0.16.0,>=0.15.3 in /usr/local/lib/python3.7/dist-packages (from spacytextblob) (0.15.3)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (4.63.0)\n","Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (1.21.5)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<1.9.0,>=1.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (1.8.2)\n","Requirement already satisfied: blis<0.8.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (0.4.1)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.8 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (3.0.9)\n","Requirement already satisfied: typer<0.5.0,>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (0.4.0)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (1.0.6)\n","Requirement already satisfied: thinc<8.1.0,>=8.0.12 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (8.0.15)\n","Requirement already satisfied: pathy>=0.3.5 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (0.6.1)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (1.0.1)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.1 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (2.4.2)\n","Requirement already satisfied: typing-extensions<4.0.0.0,>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (3.10.0.2)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (2.0.6)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (3.0.6)\n","Requirement already satisfied: wasabi<1.1.0,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (0.9.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (57.4.0)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (3.3.0)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (2.0.6)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (2.23.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (21.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from spacy<4.0,>=3.0->spacytextblob) (2.11.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from catalogue<2.1.0,>=2.0.6->spacy<4.0,>=3.0->spacytextblob) (3.7.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->spacy<4.0,>=3.0->spacytextblob) (3.0.7)\n","Requirement already satisfied: smart-open<6.0.0,>=5.0.0 in /usr/local/lib/python3.7/dist-packages (from pathy>=0.3.5->spacy<4.0,>=3.0->spacytextblob) (5.2.1)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<4.0,>=3.0->spacytextblob) (2021.10.8)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<4.0,>=3.0->spacytextblob) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<4.0,>=3.0->spacytextblob) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<4.0,>=3.0->spacytextblob) (1.24.3)\n","Requirement already satisfied: nltk>=3.1 in /usr/local/lib/python3.7/dist-packages (from textblob<0.16.0,>=0.15.3->spacytextblob) (3.2.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk>=3.1->textblob<0.16.0,>=0.15.3->spacytextblob) (1.15.0)\n","Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.7/dist-packages (from typer<0.5.0,>=0.3.0->spacy<4.0,>=3.0->spacytextblob) (7.1.2)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->spacy<4.0,>=3.0->spacytextblob) (2.0.1)\n","Requirement already satisfied: afinn in /usr/local/lib/python3.7/dist-packages (0.1)\n","Requirement already satisfied: pysrt in /usr/local/lib/python3.7/dist-packages (1.1.2)\n","Requirement already satisfied: chardet in /usr/local/lib/python3.7/dist-packages (from pysrt) (3.0.4)\n","Requirement already satisfied: textdescriptives in /usr/local/lib/python3.7/dist-packages (1.0.6)\n","Requirement already satisfied: spacy>=3.0.3 in /usr/local/lib/python3.7/dist-packages (from textdescriptives) (3.2.3)\n","Requirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from textdescriptives) (1.3.5)\n","Requirement already satisfied: numpy>=1.20.0 in /usr/local/lib/python3.7/dist-packages (from textdescriptives) (1.21.5)\n","Requirement already satisfied: pyphen>=0.11.0 in /usr/local/lib/python3.7/dist-packages (from textdescriptives) (0.12.0)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.0->textdescriptives) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.0->textdescriptives) (2018.9)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=1.0.0->textdescriptives) (1.15.0)\n","Requirement already satisfied: typer<0.5.0,>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (0.4.0)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (3.3.0)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (1.0.6)\n","Requirement already satisfied: wasabi<1.1.0,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (0.9.0)\n","Requirement already satisfied: thinc<8.1.0,>=8.0.12 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (8.0.15)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<1.9.0,>=1.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (1.8.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (2.11.3)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (2.0.6)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (2.23.0)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (4.63.0)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (2.0.6)\n","Requirement already satisfied: pathy>=0.3.5 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (0.6.1)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.8 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (3.0.9)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (3.0.6)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.1 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (2.4.2)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (57.4.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (21.3)\n","Requirement already satisfied: typing-extensions<4.0.0.0,>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (3.10.0.2)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (1.0.1)\n","Requirement already satisfied: blis<0.8.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.0.3->textdescriptives) (0.4.1)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from catalogue<2.1.0,>=2.0.6->spacy>=3.0.3->textdescriptives) (3.7.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->spacy>=3.0.3->textdescriptives) (3.0.7)\n","Requirement already satisfied: smart-open<6.0.0,>=5.0.0 in /usr/local/lib/python3.7/dist-packages (from pathy>=0.3.5->spacy>=3.0.3->textdescriptives) (5.2.1)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.0.3->textdescriptives) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.0.3->textdescriptives) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.0.3->textdescriptives) (2021.10.8)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.0.3->textdescriptives) (1.24.3)\n","Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.7/dist-packages (from typer<0.5.0,>=0.3.0->spacy>=3.0.3->textdescriptives) (7.1.2)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->spacy>=3.0.3->textdescriptives) (2.0.1)\n","Requirement already satisfied: tokenwiser in /usr/local/lib/python3.7/dist-packages (0.1.7)\n","Requirement already satisfied: PyYAML>=5.3.1 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (6.0)\n","Requirement already satisfied: scikit-learn>=0.24.0 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (1.0.2)\n","Requirement already satisfied: spacy>=3.1.0 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (3.2.3)\n","Requirement already satisfied: sentencepiece>=0.1.95 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (0.1.96)\n","Requirement already satisfied: yake-github>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (0.4.0)\n","Requirement already satisfied: jellyfish>=0.8.2 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (0.9.0)\n","Requirement already satisfied: Pyphen>=0.10.0 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (0.12.0)\n","Requirement already satisfied: vowpalwabbit>=8.9.0 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (9.0.1)\n","Requirement already satisfied: snowballstemmer>=2.1.0 in /usr/local/lib/python3.7/dist-packages (from tokenwiser) (2.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.24.0->tokenwiser) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.24.0->tokenwiser) (1.1.0)\n","Requirement already satisfied: numpy>=1.14.6 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.24.0->tokenwiser) (1.21.5)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.24.0->tokenwiser) (1.4.1)\n","Requirement already satisfied: wasabi<1.1.0,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (0.9.0)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.8 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (3.0.9)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (1.0.6)\n","Requirement already satisfied: pathy>=0.3.5 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (0.6.1)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (3.0.6)\n","Requirement already satisfied: typer<0.5.0,>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (0.4.0)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (2.23.0)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (4.63.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (57.4.0)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.1 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (2.4.2)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (2.0.6)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (1.0.1)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (21.3)\n","Requirement already satisfied: thinc<8.1.0,>=8.0.12 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (8.0.15)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (2.0.6)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (3.3.0)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<1.9.0,>=1.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (1.8.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (2.11.3)\n","Requirement already satisfied: typing-extensions<4.0.0.0,>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (3.10.0.2)\n","Requirement already satisfied: blis<0.8.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=3.1.0->tokenwiser) (0.4.1)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from catalogue<2.1.0,>=2.0.6->spacy>=3.1.0->tokenwiser) (3.7.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->spacy>=3.1.0->tokenwiser) (3.0.7)\n","Requirement already satisfied: smart-open<6.0.0,>=5.0.0 in /usr/local/lib/python3.7/dist-packages (from pathy>=0.3.5->spacy>=3.1.0->tokenwiser) (5.2.1)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.1.0->tokenwiser) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.1.0->tokenwiser) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.1.0->tokenwiser) (2021.10.8)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=3.1.0->tokenwiser) (3.0.4)\n","Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.7/dist-packages (from typer<0.5.0,>=0.3.0->spacy>=3.1.0->tokenwiser) (7.1.2)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (from yake-github>=0.4.0->tokenwiser) (2.6.3)\n","Requirement already satisfied: tabulate in /usr/local/lib/python3.7/dist-packages (from yake-github>=0.4.0->tokenwiser) (0.8.9)\n","Requirement already satisfied: segtok in /usr/local/lib/python3.7/dist-packages (from yake-github>=0.4.0->tokenwiser) (1.5.11)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->spacy>=3.1.0->tokenwiser) (2.0.1)\n","Requirement already satisfied: regex in /usr/local/lib/python3.7/dist-packages (from segtok->yake-github>=0.4.0->tokenwiser) (2019.12.20)\n"]}],"source":["! pip install mlxtend\n","! pip install scikit-plot\n","! pip install newspaper3k\n","! pip install -U spacy\n","! pip install -U textacy\n","! pip install wordcloud\n","! pip install emoji\n","! pip install nltk\n","! pip install scikit-plot\n","! pip install spacytextblob\n","! pip install afinn\n","! pip install pysrt\n","! pip install textdescriptives\n","! pip install tokenwiser"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5269,"status":"ok","timestamp":1647396194026,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"},"user_tz":240},"id":"Felf-hOqnB5Q","outputId":"e343fab1-ac0c-4039-8c9b-7743eb90538f"},"outputs":[{"output_type":"stream","name":"stdout","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]}],"source":["# imports\n","from sklearn.datasets import load_digits, fetch_openml\n","from sklearn.model_selection import train_test_split\n","import os\n","import numpy as np\n","from PIL import Image\n","import uuid\n","import pandas as pd\n","import cv2   \n","import random\n","from scipy.cluster.hierarchy import linkage, dendrogram, fcluster\n","from scipy.spatial.distance import pdist, squareform\n","# sklearn does have some functionality too, but mostly a wrapper to scipy\n","from sklearn.metrics import pairwise_distances \n","from sklearn.preprocessing import StandardScaler\n","from sklearn.cluster import KMeans, DBSCAN\n","from sklearn.neighbors import NearestNeighbors\n","from scipy.cluster.hierarchy import linkage, dendrogram\n","from scipy.cluster.hierarchy import fcluster\n","from sklearn import metrics \n","from sklearn.datasets import make_blobs\n","import scikitplot as skplt\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","#Principal component analysis (PCA) for reducing the dimensionality of data\n","from sklearn.decomposition import PCA\n","from sklearn import metrics \n","import scikitplot as skplt\n","\n","# color maps\n","from matplotlib import cm\n","\n","# some \"fun\" packages\n","from wordcloud import WordCloud\n","import emoji\n","import re\n","\n","# text imports\n","import spacy\n","from spacytextblob.spacytextblob import SpacyTextBlob\n","from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer,TfidfVectorizer  \n","import nltk\n","from nltk.corpus import stopwords\n","nltk.download('stopwords')\n","import json\n","\n","# text imports\n","from spacy import cli\n","import textdescriptives as td\n","import tokenwiser\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.pipeline import Pipeline\n","import nltk\n","from nltk.corpus import stopwords\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","import gensim\n","from afinn import Afinn\n","from newspaper import Article\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","# for distance and h-clustering\n","from scipy.cluster.hierarchy import linkage, dendrogram, fcluster\n","from scipy.spatial.distance import pdist, squareform\n","\n","#for k-means\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.cluster import KMeans\n","from sklearn.neighbors import NearestNeighbors\n","from sklearn.metrics import silhouette_samples, silhouette_score\n","\n","# for keras\n","from tensorflow.keras import utils"]},{"cell_type":"code","source":[""],"metadata":{"id":"Vk8-tPmbWvWu","executionInfo":{"status":"ok","timestamp":1647396194026,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"w2oOAuAuWvAx","executionInfo":{"status":"ok","timestamp":1647396194027,"user_tz":240,"elapsed":4,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","execution_count":3,"metadata":{"id":"vUXGClvhnNdx","executionInfo":{"status":"ok","timestamp":1647396195228,"user_tz":240,"elapsed":1204,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"colab":{"base_uri":"https://localhost:8080/","height":582},"outputId":"41671b36-5da8-458f-e1ac-314544ee8ddd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       job_id                                              title  \\\n","14642   14644  Psychiatric Nurse from Europe (Relocation to E...   \n","10750   10752              Beauty & Fragrance consultants needed   \n","17198   17200                                   Video Journalist   \n","8613     8615                          Hvilke APPS vil du skape?   \n","1079     1081                     Contact Center Representatives   \n","\n","                 location department salary_range  \\\n","14642              GR, ,         NaN  26000-30000   \n","10750        GB, , London        NaN          NaN   \n","17198  US, DC, Washington        NaN          NaN   \n","8613             NO, 03,         NaN          NaN   \n","1079    US, NV, Las Vegas        NaN          NaN   \n","\n","                                         company_profile  \\\n","14642  ClarusApex is an international recruiting comp...   \n","10750  Established on the principles that full time e...   \n","17198  Applied Memetics LLC is a professional service...   \n","8613   Knowit består av 1800 spesialister som jobber ...   \n","1079   Tidewater Finance Co. was established in 1992 ...   \n","\n","                                             description  \\\n","14642  Our client – private hospital in England – is ...   \n","10750  Luxury beauty &amp; fragrance consultants need...   \n","17198  The Video Journalist shall properly complete a...   \n","8613   Er du glad i å skape nye løsninger?Vi søker kr...   \n","1079    Tidewater Finance Company, located in Henders...   \n","\n","                                            requirements  \\\n","14642  REQUIREMENTS at least 12 months experiencea de...   \n","10750                                                NaN   \n","17198  The Video Journalist shall have at least five ...   \n","8613                                                 NaN   \n","1079   The position requires the following qualificat...   \n","\n","                                                benefits  telecommuting  \\\n","14642  WORKING CONDITIONSsalary 2275 – 3000 € per mon...              0   \n","10750                                                NaN              0   \n","17198                                                NaN              0   \n","8613                                                 NaN              0   \n","1079   Our company offers a competitive salary plus B...              0   \n","\n","       has_company_logo  has_questions employment_type required_experience  \\\n","14642                 1              0       Full-time           Associate   \n","10750                 1              0             NaN                 NaN   \n","17198                 1              0             NaN                 NaN   \n","8613                  1              1             NaN                 NaN   \n","1079                  1              0       Full-time         Entry level   \n","\n","      required_education            industry          function  fraudulent  \n","14642    Master's Degree     Pharmaceuticals               NaN           0  \n","10750                NaN                 NaN               NaN           0  \n","17198                NaN                 NaN               NaN           0  \n","8613                 NaN                 NaN               NaN           0  \n","1079         Unspecified  Financial Services  Customer Service           0  "],"text/html":["\n","  <div id=\"df-7d92d633-30f9-468b-aef9-8a4e5ad1198a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>job_id</th>\n","      <th>title</th>\n","      <th>location</th>\n","      <th>department</th>\n","      <th>salary_range</th>\n","      <th>company_profile</th>\n","      <th>description</th>\n","      <th>requirements</th>\n","      <th>benefits</th>\n","      <th>telecommuting</th>\n","      <th>has_company_logo</th>\n","      <th>has_questions</th>\n","      <th>employment_type</th>\n","      <th>required_experience</th>\n","      <th>required_education</th>\n","      <th>industry</th>\n","      <th>function</th>\n","      <th>fraudulent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14642</th>\n","      <td>14644</td>\n","      <td>Psychiatric Nurse from Europe (Relocation to E...</td>\n","      <td>GR, ,</td>\n","      <td>NaN</td>\n","      <td>26000-30000</td>\n","      <td>ClarusApex is an international recruiting comp...</td>\n","      <td>Our client – private hospital in England – is ...</td>\n","      <td>REQUIREMENTS at least 12 months experiencea de...</td>\n","      <td>WORKING CONDITIONSsalary 2275 – 3000 € per mon...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Full-time</td>\n","      <td>Associate</td>\n","      <td>Master's Degree</td>\n","      <td>Pharmaceuticals</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10750</th>\n","      <td>10752</td>\n","      <td>Beauty &amp; Fragrance consultants needed</td>\n","      <td>GB, , London</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Established on the principles that full time e...</td>\n","      <td>Luxury beauty &amp;amp; fragrance consultants need...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17198</th>\n","      <td>17200</td>\n","      <td>Video Journalist</td>\n","      <td>US, DC, Washington</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Applied Memetics LLC is a professional service...</td>\n","      <td>The Video Journalist shall properly complete a...</td>\n","      <td>The Video Journalist shall have at least five ...</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8613</th>\n","      <td>8615</td>\n","      <td>Hvilke APPS vil du skape?</td>\n","      <td>NO, 03,</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Knowit består av 1800 spesialister som jobber ...</td>\n","      <td>Er du glad i å skape nye løsninger?Vi søker kr...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1079</th>\n","      <td>1081</td>\n","      <td>Contact Center Representatives</td>\n","      <td>US, NV, Las Vegas</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Tidewater Finance Co. was established in 1992 ...</td>\n","      <td>Tidewater Finance Company, located in Henders...</td>\n","      <td>The position requires the following qualificat...</td>\n","      <td>Our company offers a competitive salary plus B...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Full-time</td>\n","      <td>Entry level</td>\n","      <td>Unspecified</td>\n","      <td>Financial Services</td>\n","      <td>Customer Service</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d92d633-30f9-468b-aef9-8a4e5ad1198a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7d92d633-30f9-468b-aef9-8a4e5ad1198a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7d92d633-30f9-468b-aef9-8a4e5ad1198a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["#Read the dataset from the github repo\n","url = \"https://raw.githubusercontent.com/ChunxiaqiuY/BA865-Advanced-Analytics_Team-Great/main/fake_job_postings.csv\"\n","df = pd.read_csv(url)\n","#Basic understanding of the data, sample data\n","df.sample(5)"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1647396195228,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"},"user_tz":240},"id":"vt2lh8qBnTpB","outputId":"5e0794b9-5438-41a0-8272-273f37b1aca7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["job_id                     0\n","title                      0\n","location                 346\n","department             11547\n","salary_range           15011\n","company_profile         3308\n","description                1\n","requirements            2695\n","benefits                7209\n","telecommuting              0\n","has_company_logo           0\n","has_questions              0\n","employment_type         3471\n","required_experience     7050\n","required_education      8104\n","industry                4902\n","function                6455\n","fraudulent                 0\n","dtype: int64"]},"metadata":{},"execution_count":4}],"source":["##Check missing value in each category\n","df.isna().sum()"]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P5p3ML36Nl1u","executionInfo":{"status":"ok","timestamp":1647396195228,"user_tz":240,"elapsed":6,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"5bada47e-4298-4038-d91b-1d63361f8a8b"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 17879 entries, 0 to 17878\n","Data columns (total 18 columns):\n"," #   Column               Non-Null Count  Dtype \n","---  ------               --------------  ----- \n"," 0   job_id               17879 non-null  int64 \n"," 1   title                17879 non-null  object\n"," 2   location             17533 non-null  object\n"," 3   department           6332 non-null   object\n"," 4   salary_range         2868 non-null   object\n"," 5   company_profile      14571 non-null  object\n"," 6   description          17878 non-null  object\n"," 7   requirements         15184 non-null  object\n"," 8   benefits             10670 non-null  object\n"," 9   telecommuting        17879 non-null  int64 \n"," 10  has_company_logo     17879 non-null  int64 \n"," 11  has_questions        17879 non-null  int64 \n"," 12  employment_type      14408 non-null  object\n"," 13  required_experience  10829 non-null  object\n"," 14  required_education   9775 non-null   object\n"," 15  industry             12977 non-null  object\n"," 16  function             11424 non-null  object\n"," 17  fraudulent           17879 non-null  int64 \n","dtypes: int64(5), object(13)\n","memory usage: 2.5+ MB\n"]}]},{"cell_type":"markdown","source":["##Preprocess & Data Cleaning"],"metadata":{"id":"JxIBLYFKTO6r"}},{"cell_type":"code","source":["# Unknown for missing location\n","df.location = df.location.fillna('unknown')\n","# unknown for missing department\n","df.department = df.department.fillna('unknown')\n","# fill average for missing salary_range\n","job_salary = df.copy()\n","salary_temp = job_salary.salary_range.dropna()\n","ranges = []\n","for i in salary_temp:\n","  try:\n","    ranges.append(int(i.split(\"-\")[0]))\n","    ranges.append(int(i.split(\"-\")[1]))\n","  except:\n","    ranges.append(0)\n","np.asarray(ranges)\n","average_salary = np.average(ranges)\n","df.salary_range = df.salary_range.fillna('average_salary')\n","# Unknown for missing company_profile\n","df['company_profile'] = df['company_profile'].fillna('unknown')\n","# Unknown for missing description\n","df['description'] = df['description'].fillna('unknown')\n","# Unknown for missing requirements\n","df['requirements'] = df['requirements'].fillna('unknown')\n","# Unknown for missing employment, then replace the category value to numeric \n","df['employment_type'] = df['employment_type'].fillna('unknown')\n","df['employment_type'].replace(['Full-time', 'Part-time','Contract', 'Temporary', 'Other', 'unknown'],\n","                        [0, 1, 2, 3, 4, 5], inplace=True)\n","# Unknown for missing required_experience, then replace the category value to numeric \n","df['required_experience'] = df['required_experience'].fillna('unknown')\n","df['required_experience'].replace(['Not Applicable', 'Mid-Senior level','Associate', 'Entry level', 'Executive', 'Director', 'Internship',\n","                          'unknown'], [0, 1, 2, 3, 4, 5, 6, 7], inplace=True)\n","# Unknown for missing benefits\n","df['benefits'] = df['benefits'].fillna('unknown')\n","# Unknown for missing required_education\n","df['required_education'] = df['required_education'].fillna('unknown')\n","df_re = pd.get_dummies(df, columns=['required_education'])\n","# Unknown for missing industry\n","df['industry'] = df['industry'].fillna('unknown')\n","df_industry = pd.get_dummies(df, columns=['industry'])\n","# Unknown for missing function\n","df['function'] = df['function'].fillna('unknown')\n","df_function = pd.get_dummies(df, columns=['function'])\n","required_experience_c = utils.to_categorical(df['required_experience'])\n","employment_type_c = utils.to_categorical(df['employment_type'])\n"],"metadata":{"id":"vDDLVJXaTRBn","executionInfo":{"status":"ok","timestamp":1647396195229,"user_tz":240,"elapsed":5,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["##Double check all missing value are properly handled\n","df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2M9brw4WdzhX","executionInfo":{"status":"ok","timestamp":1647396195229,"user_tz":240,"elapsed":5,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"e51c3959-f8b4-49f1-e03e-18dfa9309e22"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["job_id                 0\n","title                  0\n","location               0\n","department             0\n","salary_range           0\n","company_profile        0\n","description            0\n","requirements           0\n","benefits               0\n","telecommuting          0\n","has_company_logo       0\n","has_questions          0\n","employment_type        0\n","required_experience    0\n","required_education     0\n","industry               0\n","function               0\n","fraudulent             0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#Make a copy of the orginal df, use job id as index \n","job = df.copy()\n","job.index = job['job_id']\n","del job['job_id']"],"metadata":{"id":"-az0zqe8d-qs","executionInfo":{"status":"ok","timestamp":1647396195229,"user_tz":240,"elapsed":4,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Let's shuffle things... \n","shuffled_indices= np.arange(job.shape[0])\n","np.random.shuffle(shuffled_indices)\n","\n","text_info = (job.title + job.location + job['company_profile'] + job.description + job.requirements + job. benefits).to_numpy()\n","label = np.where(job['fraudulent']=='fraudulent',1,0)\n","\n","print(text_info)\n","text_info = text_info[shuffled_indices]\n","label = label[shuffled_indices]\n","print(text_info)"],"metadata":{"id":"--CWkm4bpN7a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647396195404,"user_tz":240,"elapsed":179,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"93da6700-0f0b-4a7e-b1c0-b7fe70654b54"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["[\"Customer Service - Cloud Video ProductionNZ, , Auckland90 Seconds, the worlds Cloud Video Production Service.90 Seconds is the worlds Cloud Video Production Service enabling brands and agencies to get high quality online video content shot and produced anywhere in the world. 90 Seconds makes video production fast, affordable, and all managed seamlessly in the cloud from purchase to publish. http://90#URL_fbe6559afac620a3cd2c22281f7b8d0eef56a73e3d9a311e2f1ca13d081dd630#90 Seconds removes the hassle, cost, risk and speed issues of working with regular video production companies by managing every aspect of video projects in a beautiful online experience. With a growing global network of over 2,000 rated video professionals in over 50 countries managed by dedicated production success teams in 5 countries, 90 Seconds provides a 100% success guarantee.90 Seconds has produced almost 4,000 videos in over 30 Countries for over 500 Global brands including some of the worlds largest including Paypal, L’Oreal, Sony and Barclays and has offices in Auckland, London, Sydney, Tokyo and Singapore.http://90#URL_fbe6559afac620a3cd2c22281f7b8d0eef56a73e3d9a311e2f1ca13d081dd630#\\xa0|\\xa0http://90#URL_e2ad0bde3f09a0913a486abdbb1e6ac373bb3310f64b1fbcf550049bcba4a17b#\\xa0| http://90#URL_8c5dd1806f97ab90876d9daebeb430f682dbc87e2f01549b47e96c7bff2ea17e#\\xa0Organised - Focused - Vibrant - Awesome!Do you have a passion for customer service? Slick typing skills? Maybe Account Management? ...And think administration is cooler than a polar bear on a jetski? Then we need to hear you!\\xa0We are the Cloud Video Production Service and opperating on a glodal level. Yeah, it's pretty cool. Serious about\\xa0delivering a world class product and excellent customer service.Our rapidly expanding business is looking for a talented Project Manager to manage the successful delivery of video projects, manage client communications and drive the production process. Work with some of the coolest brands on the planet and learn from a global team that are representing NZ is a huge way!We are entering the next growth stage of our business and growing quickly internationally. \\xa0Therefore, the position is bursting with opportunity for the right person entering the business at the right time.\\xa090 Seconds, the worlds Cloud Video Production Service -\\xa0http://90#URL_fbe6559afac620a3cd2c22281f7b8d0eef56a73e3d9a311e2f1ca13d081dd630#90 Seconds is the worlds Cloud Video Production Service enabling brands and agencies to get high quality online video content shot and produced anywhere in the world. Fast, affordable, and all managed seamlessly in the cloud from purchase to publish.\\xa090 Seconds removes the hassle, cost, risk and speed issues of working with regular video production companies by managing every aspect of video projects in a beautiful online experience. \\xa0With a growing network of over 2,000 rated video professionals in over 50 countries and dedicated production success teams in 5 countries guaranteeing video project success 100%. It's as easy as commissioning a quick google adwords campaign.90 Seconds has produced almost 4,000 videos in over 30 Countries for over 500 Global brands including some of the worlds largest including Paypal, L'oreal, Sony and Barclays and has offices in Auckland, London, Sydney, Tokyo &amp; Singapore.Our Auckland office is based\\xa0right in the heart of the Wynyard Quarter Innovation Precinct - GridAKL!\\xa0What we expect from you:Your key responsibility will be to communicate with the client, 90 Seconds team and freelance community throughout the video production process including, shoot planning, securing freelance talent, managing workflow and the online production management system. \\xa0The aim is to manage each video project effectively so that we produce great videos that our clients love.Key\\xa0attributesClient focused\\xa0- excellent customer service and communication skillsOnline -\\xa0oustanding computer knowledge and experience using online software and project management toolsOrganised\\xa0- manage workload and able to multi-task100% attention to detailMotivated -\\xa0self-starter with a passion for doing excellent work and achieving great resultsAdaptable\\xa0- show initiative and think on your feet as this is a constantly evolving atmosphereFlexible\\xa0- fast turnaround work and after hours availabilityEasy going\\xa0&amp; upbeat\\xa0- dosen't get bogged down and loves the challengeSense of Humour\\xa0- have a laugh and know that working in a startup takes guts!Ability to deliver\\xa0- including meeting project deadlines and budgetAttitude is more important than experience at 90 Seconds, however previous experience in customer service and/or project management is beneficialPlease view our platform / website at\\xa0#URL_395a8683a907ce95f49a12fb240e6e47ad8d5a4f96d07ebbd869c4dd4dea1826#\\xa0and get a clear understand about what we do before reaching out.What you will get from usThrough being part of the 90 Seconds team you will gain:experience working on projects located around the world with an international brandexperience working with a variety of clients and on a large range of projectsopportunity to drive and grow production function and teama positive working environment with a great teamPay$40,000-$55,000Applying for this role with a VIDEOBeing a video business, we understand that one of the quickest ways that we can assess your suitability for this role, and one of the quickest ways that you can apply for it, is for you to submit a 60-90 second long video telling us about yourself, your experience and why you think you would be perfect for the role. \\xa0It’s not about being a filmmaker or making a really creative video. \\xa0A simple video filmed with a smart phone or web cam will be fine. Please also include where you are based and when you can start.You can upload the video onto YouTube or Vimeo (or similar) as a Draft or Live link.APPLICATIONS DUE by 5pm on Wednesday 18th July 2014 -\\xa0Once you have a video ready, apply for this role via the following link together with a cover letter and your CV.\\xa0After we have watched your video and get an idea of your suitability for the role, we will email the shortlisted candidates\"\n"," \"Commissioning Machinery Assistant (CMA)US, IA, WeverValor Services provides Workforce Solutions that meet the needs of companies across the Private Sector, with a special focus on the Oil &amp; Gas Industry.\\xa0Valor Services will be involved with you throughout every step of the hiring process and remain in contact with you all the way through the final step of signing of the employment contract with your new employer.\\xa0Valor Services was founded with the vision of employing the unique skills, experiences, and qualities of America’s finest veterans to provide Private Sector companies with precise and concerted value-added services – and America’s finest Veterans with an optimized career opportunity.We are eager to get the word out to veterans that there are ample opportunities for employment in the private sector and that you are the ideal candidates to fill those positions.\\xa0Valor Services\\xa0Your Success is Our Mission.\\xa0™\\xa0Our client, located in Houston, is actively seeking an experienced Commissioning Machinery Assistant that possesses strong supervisory skills and has an attention to detail. A strong dedication to safety is a must. The ideal candidate will execute all activities while complying with quality requirements and health, environmental, and safety regulations.Implement pre-commissioning and commissioning procedures for rotary equipment.Execute all activities with subcontractor’s assigned crew that pertains to the discipline.Ensure effective utilization of commissioning manpower and consumables.Ensure the execution of vendor specialists' field activities with the assigned resources from the sub-contractor per vendor’s representative plans.Carry out equipment inspections with client representatives and ensure proper certification is produced.Prepare forms for all pending tests and submit signed certificates for final hand over to the certification engineer for QA and QC.Coordinate in the field with vendor representatives.Keep records of all activities.Ensure that safety practices are strictly followed during the execution of activities.Report progress and constraints to the mechanical supervisor.Possible authorization by site manager to receive or issue a Permit To Work according to project Permit To Work procedures.Assist supervisor to expedite pending punch-list items in accordance with the commissioning manager’s priorities.Assist supervisor to coordinate and supervise construction-support activities during pre-commissioning and commissioning activities.Company Overview:Our client is a premiere engineering, construction, and procurement company that executes large-scale projects internationally.unknown\"\n"," \"Account Executive - Washington DCUS, DC, WashingtonOur passion for improving quality of life through geography is at the heart of everything we do.\\xa0 Esri’s geographic information system (GIS) technology inspires and enables governments, universities and businesses worldwide to save money, lives and our environment through a deeper understanding of the changing world around them.Carefully managed growth and zero debt give Esri stability that is uncommon in today's volatile business world.\\xa0 Privately held, we offer exceptional benefits, competitive salaries, 401(k) and profit-sharing programs, opportunities for personal and professional growth, and much more.THE COMPANY: ESRI – Environmental Systems Research InstituteOur passion for improving quality of life through geography is at the heart of everything we do.\\xa0 Esri’s geographic information system (GIS) technology inspires and enables governments, universities and businesses worldwide to save money, lives and our environment through a deeper understanding of the changing world around them.Carefully managed growth and zero debt give Esri stability that is uncommon in today's volatile business world.\\xa0 Privately held, we offer exceptional benefits, competitive salaries, 401(k) and profit-sharing programs, opportunities for personal and professional growth, and much more.THE OPPORTUNITY: Account ExecutiveAs a member of the Sales Division, you will work collaboratively with an account team in order to sell and promote adoption of Esri’s ArcGIS platform within an organization. As part of an account team, you will be responsible for facilitating the development and execution of a set of strategies for a defined portfolio of accounts. When executing these strategies you will utilize your experience in enterprise sales to help customers leverage geospatial information and technology to achieve their business goals.\\xa0Specifically…Prospect and develop opportunities to partner with key stakeholders to envision, develop, and implement a location strategy for their organizationClearly articulate the strength and value proposition of the ArcGIS platformDevelop and maintain a healthy pipeline of opportunities for business growthDemonstrate a thoughtful understanding of insightful industry knowledge and how GIS applies to initiatives, trends, and triggersUnderstand the key business drivers within an organization and identify key business stakeholdersUnderstand your customers’ budgeting and acquisition processesSuccessfully execute the account management process including account prioritization, account resourcing, and account planningSuccessfully execute the sales process for all opportunitiesLeverage and lead an account team consisting of sales and other cross-divisional resources to define and execute an account strategyEffectively utilize and leverage the CRM to manage opportunities and drive the buying processPursue professional and personal development to ensure competitive knowledge of the real estate industryLeverage social media to successfully prospect and build a professional networkParticipate in trade shows, workshops, and seminars (as required)Support visual story telling through effective whiteboard sessionsBe resourceful and takes initiative to resolve issuesEDUCATION:\\xa0Bachelor’s or Master’s in GIS, business administration, or a related field, or equivalent work experience, depending on position levelEXPERIENCE:\\xa05+ years of enterprise sales experience providing platform solutions to businessesDemonstrated experience in managing the sales cycle including prospecting, proposing, and closingAbility to adapt to new technology trends and translate them into solutions that address customer needsDemonstrated experience with strong partnerships and advocacy with customersExcellent presentation, white boarding, and negotiation skills including good listening, probing, and qualification abilitiesExperience executing insight selling methodologiesDemonstrated understanding and mitigation of competitive threatsExcellent written and verbal communication and interpersonal skillsAbility to manage and prioritize your activitiesDemonstrated experience to lead executive engagements to provide services and sell to the real estate industryKnowledge of the real estate industry fiscal year, budgeting, and procurement cycleHighly motivated team player with a mature, positive attitude and passion to meet the challenges and opportunities of a businessAbility to travel domestically and/or internationally up to 50%General knowledge of spatial analysis and problem solvingResults oriented; ability to write and craft smart, attainable, realistic, time-driven goals with clear lead indicatorsOur culture is anything but corporate—we have a collaborative, creative environment; phone directories organized by first name; a relaxed dress code; and open-door policies.A Place to ThrivePassionate people who strive to make a differenceCasual dress codeFlexible work schedulesSupport for continuing educationCollege-Like CampusA network of buildings amid lush landscaping and numerous outdoor patio areasOn-site café including a Starbucks coffee bar and lounge areaFitness center available 24/7Comprehensive reference library and GIS bibliographyState-of-the-art conference center to host staff and guest speakers\\xa0Green InitiativesSolar rooftop panels reduce carbon emissionsElectric vehicles provide on-campus transportationHundreds of trees reduce the cost of cooling buildings\"\n"," ...\n"," 'Project Cost Control Staff Engineer - Cost Control Exp - TXUS, TX, HoustonWe Provide Full Time Permanent Positions for many medium to large US companies. We are interested in finding/recruiting high quality candidates in IT, Engineering, Manufacturing and other highly technical and non-technical jobs.Experienced Project Cost Control Staff Engineer is required having responsibility to provide proper variance explanation and root causes analysis of changes\\xa0D - 166Job Responsibilities:\\xa0Cost Control for large capital investments of various size and complexityActive participation in the overall cost control process.\\xa0Ensure proper progress tracking and change management systems are in place and effectively functioning in construction and detailed engineering phases of projects.Provide proper variance explanation and root causes analysis of changesDevelopment of project cost forecast and preparation of project cost reportsAssist in the development and improvement of cost controlling tools and processes.Strong analytical skills that will allow proper assessments of projects to identify potential issues.\\xa0Able support development and recommend solutions via communication and support with Project Management.Perform studies and analysisPerform bid analysis for complex service contractsPerform audits of invoicesEvaluate field change orders and validate contractor estimate and pricingDevelopment and support of contracting strategy for large capital projectsWill be required to work both independently and with a team in carrying out a project’s cost control and forecasting\\xa0 efforts\\xa0At least 12 years professional experience.Ability to work in a diverse team environmentA minimum of 8 years of experience in project cost control with a working knowledge of engineering, procurement, accounting, and construction practicesAvailable for 25% travel to support the businessStrong Analytical skillsExcellent computer skillsExcellent quality orientation and attention to detailGood communication skills\\xa0Educational Qualifications:\\xa0BS Degree in Engineering, Construction Management, Finance, Accounting, Business Management or Mathematics\\xa0We Provide Full Time Permanent Positions for many medium to large US companies. We have more than 1500 jobs available in our website. Our website has thousands of openings and these job openings are not posted anywhere else online. When you apply online through our website, it automatically forwards your information to the recruiter handling your applied job. If you are a close match, they will contact you immediately to discuss about the positions and do everything to get you an interview with the client as quickly as possible.\\xa0Visit\\xa0 : #URL_ec64af2b4fe2ca316e828f93b0cd098c22f8beba98dcac09d4dd7384b221a5e8#-#URL_9753a54b28303bf636a2816399b9c255d76fabb791336a4c748da2611a23264f#\\xa0unknown'\n"," 'Graphic DesignerNG, LA, LagosunknownNemsia Studios is looking for an experienced visual/graphic designer to join our Lagos office. The idealcandidate will be versatile in both print and digital design mediums. Working closely with our Strategists and creative team you will be engaged on projects from the pitch phase through brainstorming, concepting, and design to execution and final delivery. You will bring your all to\\xa0creating and crafting BEAUTIFUL visual expressions of ideas and briefs. We will always have ongoing internal projects.1. Must be fluent in the latest versions of Corel &amp; Adobe CC (Esp. Photoshop, Illustrator &amp; Indesign) 2. Have a strong interest in interactive/interface design 3. Understand color theory, typography, composition and photo retouching 4. Be able to take design direction 5. Must think creatively and step outside of the norm 6. Be willing to put in the extra time and effort on projects 7. Eager to learn and have a great attitude 8. Be self-sufficient and able to figure problems out on your ownCompetitive salary (compensation will be based on experience) Casual attire At Nemsia Studios you are assured of a pleasant, enthusiastic, fast paced work environment with a lot of great people who love what they do!'\n"," \"Web Application DevelopersNZ, N, WellingtonVend is looking for some awesome new talent to come join us. You'll be working in an awesome team doing awesome things, and generally being awesome.Learn about us on our\\xa0blog, or meet the team on\\xa0Twitter,\\xa0Facebook,\\xa0LinkedInAwesome SpaceOur brand new Auckland office space is located on Nuffield Street in Newmarket, surrounded by our customers and the industry we love. It is huge, open, and shiny new with great meeting room spaces, casual working environments and plenty of space to host awesome events. We don't do cubicles, just plenty of space, whiteboards and meetings rooms. We also have a great cafe/retail space with our very own Front of House Manager taking care of our visitors and fellow Venders.\\xa0Like Auckland our Melbourne office is surrounded by retail. It's a great wee space equipped with tiny houses and some awesome cardboard cutout animals.Our Toronto office is located right in the heart of downtown retail district. Like Melbourne and Auckland there's a great vibe with great coffee, boutique stores and some of the greatest restaurants in the city.\\xa0Our SoMa office in San Francisco is located in the middle of the SF tech scene, just a (Biz) stone's throw from Twitter.The EnvironmentWe want you to be at the top of your game. You can wear whatever clothing you like, start work late in the morning, take breaks whenever you want and generally work the way you want to work.\\xa0Who we're looking forVend is looking for people to push the boundaries. We are a hard working professional team with a wicked sense of humour, and we are looking for people who thrive in a collaborative open environment. We want passionate, hard working, talented individuals that want to lead in their field.Who are we?Vend is an award winning web based point of sale software for retail.\\xa0 We’re chucking out crusty old cash registers and replacing them with iPads, touch screens and beautiful software, all of this to make life easier for our retailers.\\xa0 Vend is a fast-growing tech start-up, since launching in 2010 we’ve now got 10,000+ customers all over the world and have more than 100 employees.\\xa0In case you’re interested in our tech stack we use Capistrano, Redis, Git / Github, Vagrant, Jenkins, Puppet, Resque, New Relic, Doctrine, MySQL, Objective C, PHP, JavaScript, GO, Symfony, Rake, Selenium, Compass, SASS, jQuery, Bundler, Nginx, and a bunch of other things.Why you’d like us:Our engineering department houses some of the smartest minds in NZ, they work tirelessly with our product teams to come up with the best and brightest new features and fixes for the Vend platform. As you can see from our tech stack above, we use the latest and greatest to bring delight to our customers, and want to add members to our team that live and breathe technology just like we do.As well as developing a world-leading product, we believe that our culture is world-leading too! We balance super hard work with having a lot of fun at work! \\xa0Like playing pool, getting a Dia de los Muertos makeover, zoning out on the couches listening to music or raiding the snack cupboard (FYI frozen marshmallows are the latest craze at Vend - seriously, try them!).\\xa0Work-life balance. \\xa0We know you have a life outside of work. We know you probably have little side projects or businesses too. This is valued and at Vend you can have a life inside work to. We’ll also give you a $5,000 allowance per year to develop your skills and attend conferences of your choice. Within reason, of course. We turned down the guy who wanted to use the five large to go to a\\xa0heavy metal concert on a cruise ship.\\xa0We want to hear from you if:You have an in-depth understanding of OO programmingYou totally get MVC and multi-tier architectureYou have experience with TDD or writing automated testsYou understand relational databases and know how to write SQLYou’ve worked an Agile-style team before and are down with cooperationBonus points if you’ve worked in retail beforeIf this sounds like you then get in touch now and delight us with your unique application! We have HUGE projects in the pipeline this year and need the best talent on-board to help achieve our goals.While Vend is totally open to receiving applications from people based overseas, our recruitment process for technical talent is lengthy and involves a lot of face-to-face time between our candidates and existing team members here. We can start initial stages of interviewing using awesome technology like Skype and Google Hangouts, we really need you to be here and to have hung out with us in Auckland before making a job offer.unknown\"]\n","['IT System EngineerLT, VL, VilniusunknownSERVER ADMINISTRATORDo you want to:Manage the life cycle of all Data Center equipment, operates and maintains physical servers, virtual hosts and virtualization software.Manage licenses and inventory.Work to ensure maximum performance, security, reliability and availability of the data center running 24x7.Monitor, investigate and resolve problems, inefficiencies, and performance issues.Keep updated on industry trends and emerging server and virtualization technologies; evaluate and recommends specific solutions.Define, review, and maintain technical standards, especially related to installation, configuration, management, and maintenance.Assist procurement team with purchases of hardware, software and services as required.\\xa0\\xa0We expect from you:Be fluent in English, have clear and concise communication and good organizational skillsExperience with opening and managing support/maintenance tickets to vendors (HP, Cisco, etc.)Experience with management of Windows infrastructureExperience with management of Linux infrastructureBasic experience with Cisco network device administrationClient-focused approachEligibility to travel in EU regionWe would appreciate relevant industry certifications\\xa0We offer:Being part of competition with world level companies outside of Lithuanian marketHave best practices and fun things.Informal style of management and communicationDynamic, inspiring and international environmentCreative approach – we don’t believe in “one size fits all”Fun things: leisure zone, breakfast services, snacks in the office, lot of team building events and othersA lot of servers, complex infrastructure and challenging product'\n"," 'Operations & Logistics Manager - SFUS, CA, San FranciscoShyp is the easiest way to send anything, anywhere.Here at Shyp, we’re building the #1 brand consumers and small businesses trust for shipping their packages, and in the process fundamentally disrupting a 220 year old #URL_5e3cdedac8b912c62b6523c7af01360e03d0cb98631134035b2ddbaecdee14dd#’re building a customer-centric organization that encourages customer service to permeate the decisions and attitudes of the entire company. Our culture is collaborative, focused and fast-paced. We have an incredible team and are well funded by some amazing investors. Come join us.Here at Shyp, we’re building the #1 brand consumers and small businesses trust for shipping, and in the process, fundamentally disrupting a 220-year-old industry. We have an incredible team and are well funded by amazing investors. Come join our rocket ship.Overview:The Operations &amp; Logistics Manager role provides a unique opportunity to enhance user experience through the management of our warehouse team and the optimization of our packaging and shipping processes. This role blends direct team management and analytics-based strategic decision making. It requires a strong background in logistics &amp; shipping, supply chain management, process improvement, as well as an ability to effectively manage and motivate a diverse team.This is an intense business side startup role &amp; this person will work closely with our engineers in San Francisco to monitor item flow and ensure accuracy &amp; efficiency through process, error proofing, and rapid iterative testing and evaluation. This role has a direct responsibility for the quality and reliability of the service until each item has been delivered.YOUR FOCUSTake ownership of the warehouse and every item from entry to exitDrive continual operations development/improvement as the business quickly scalesOn-board, train, manage and schedule warehouse team (technicians, team leads, etc.)Work closely with Supply Chain manager and Community manager to quickly resolve support issuesAnalyze key metrics to uncover business insightsManage shipping supply inventory and procurementEXAMPLEManager of shipping department at a large fulfillment center or leader at manufacturing facility, with an eagerness to do things differentlyConsulting, banking, ops analyst background with data driven decision instinctsEngineering background with dreams of applying similar process to people processes2-5 years of operational/analytical experience gained in supply chain management, operations management or consultingExpert communicator that can inspire and encourage others towards a clear objectiveProven track record of building and managing a team (hiring, training, leading, problem solving)Data driven decision making mentality and sound business judgment through strong analytical thinkingSolid understanding of a variety of shipping and packing methodsDegree in science/engineering, economics, finance or similar field (Masters a plus)Relevant experience in logistics software &amp;/or shipping services is a plusStartup hustle \"I work my butt off; I don’t settle, and I love it\" attitudeGoogle apps guru, comfortable with iOS and OS X devicesOpportunity to play a key role in a notable start up -\\xa0you’ll shape how the company operatesMake a difference. We’re changing the way people send things anywhere in the world.Work with an incredible team that never settles in their pursuit of excellentComplete medical/dental benefitsFlexible vacation policyFresh food provided for snacks, a fridge full of drinks and catered lunch dailyApple laptops for employeesCorporate gym membershipCool office space in San Francisco!'\n"," 'Senior Quality Control InspectorUS, MA, Wilmingtonunknown6 month ContractWe are seeking a talented and highly motivated individual to be part of our Operations team as Sr. QC Inspector / Material Handler. This position reports directly to the Director of Manufacturing. The successful candidate will support the manufacturing operation process as it relates to IVD instrumentation and reagents. This support will be in the form of the following responsibilities:Responsibilities will broadly include:Perform daily receipts of all materialsApproves incoming materials by confirming specifications; setting up and conducting visual and measurement tests; rejecting and returning unacceptable materials through non-conforming materials process.Approves in-process production by confirming specifications; conducting visual and measurement tests; communicating required adjustments to manufacturing management.Documents inspection results by completing reports and logs.Keeps measurement equipment operating by following operating instructions.Maintains safe and healthy work environment by following standards and proceduresFollows all processes and procedures through compliance.Perform shipments of materials to contract manufacturers and/or\\xa0 to end-usersManage material inventory for the reagents and instrumentsResponsible for the accuracy of inventoryAttend material review meetingsPerform QC Incoming Inspection of all received materialAS/BS in a engineering discipline preferredProficient with dimensional inspection and test equipmentAbility to follow and understand work instructions and quality proceduresAbility to multitask.Critical thinking and decision making is central to this jobPrior experience in a regulated environment including GMP training is a mustMust have mechanical aptitude, proven experience in performing Incoming InspectionStrong verbal and written communication skills. Fluent in computers and MS office applications.8-10 years industry experience within the manufacturing/production environment, preferably in a small company/start-up setting.unknown'\n"," ...\n"," 'BuyerUS, IL, ChicagoWe Provide Full Time Permanent Positions for many medium to large US companies. We are interested in finding/recruiting high quality candidates in IT, Engineering, Manufacturing and other highly technical and non-technical jobs.(We have more than 1500+ Job openings in our website and some of them are relevant to this job. Feel free to search it in the website and apply directly. Just Click the “Apply Now” and you will redirect to our main website where you can search for the other jobs.)Responsible for all the procurement activities of the companyWill have to work with the CEO to source, evaluate and recommend potential suppliersWill be responsible for purchasing quality goods and negotiating with vendors and suppliers for purchasing goods at the best possible prices.Will have to check the quality of goods by place sample orders.Will have to work with the sales team to evaluate market trends, sale trends and placing order trends.\\xa0Visit - #URL_ec64af2b4fe2ca316e828f93b0cd098c22f8beba98dcac09d4dd7384b221a5e8#-#URL_2954b76adf23051d4bc35fc729f5a18c5de715ed82dfaee24b3aabbf3874ca57# unknownunknown'\n"," \"Technical Recruiter San Francisco, CAUS, , unknownResponsibility:\\xa0Will work closely with account managers and client's managers for their temp resources needs.Contact candidates via phone calls and emails, validate their qualifications, working permit (visa or citizenship), corp to corp terminology, tax terms, maintaining hot lists and keep people motivatedMaintain candidate pipelines and submit qualified candidatesCoordinate phone or onsite interviews with hiring manager and candidates.Experience in entire cycle of corp to corp arrangements.Source candidates through innovative techniques.Very good communication skill, can articulate hiring manager's requirement on both technical and soft skillsGood negotiation skills and can convince people easilyHas experience with major search engines such as #URL_6844a27a2c682d6341050815a35ca63600177b334c0a541a0cccdd2d9cfaff12#, Careerbuilder, LinkedIn, #URL_fe1bd712f9d4d34b5653986ee7a6746f0b00f5edbaf0b1cd5eb394ca464d7a32#, Craigslist, etc.unknown\"\n"," 'Manufacturing Assembler $22/hourUS, MA, Wilmingtonunknown$18-$22/Hour (1st shift 8:00am to 5:00pm Monday - Friday)\\xa0The main instrument that you will be working on is 330 lbs and has over 1,000 parts. It requires hand assembly and attention to detail. It usually takes about a month to assemble, using delicate calibers, microscopes and the use of a robotic arm.\\xa0Hands-on assemble and test complex modules and bench top instruments, producing quality instrumentationTroubleshoot and repair complex mechanical and electrical assembliesProvide feedback and advice on design changes for “Design For Manufacturing” (DFM)Produce compliant device history records in a regulated environment3 years+ industry experience within the manufacturing/production environment, preferably in a setting with FDA / ISO regulations.\\xa0Experience with precision bearings, shop presses and fixtures to aid in assembly.An understanding of tight tolerances, and precision assembly aided by dial indicators and digital calipersExperience with complex Test Procedures\\xa0Experience with various forms of Loctite, adhesives, and epoxies.unknown']\n"]}]},{"cell_type":"code","source":["text_info.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3pVmusjkv1xL","executionInfo":{"status":"ok","timestamp":1647396195404,"user_tz":240,"elapsed":11,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"5ee83cee-7a7e-40bb-e6a3-b673f34ca5a9"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(17879,)"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["##TextVectorization() Layer"],"metadata":{"id":"J-86MANo4KGp"}},{"cell_type":"code","source":["import tensorflow as tf\n","import string\n","import re\n","from tensorflow import keras\n","\n","def custom_standardization_fn(string_tensor):\n","    lowercase_string = tf.strings.lower(string_tensor) # We convert upper case characters to lowercase.\n","    return tf.strings.regex_replace(\n","        lowercase_string, f\"[{re.escape(string.punctuation)}]\", \"\") # We find and remove punctuation.\n","  \n","def custom_split_fn(string_tensor):\n","    return tf.strings.split(string_tensor) # By default the separator is white space.\n"," \n","text_vectorization = keras.layers.TextVectorization(\n","    max_tokens=1000,\n","    output_mode=\"int\",\n","    standardize=custom_standardization_fn,\n","    split=custom_split_fn,\n",")\n","\n","\n","##because the limit of ram, we can only choose the random 1500 rows \n","dataset = text_info[:9000]\n","text_vectorization.adapt(dataset)\n","text_vectorization.get_vocabulary()"],"metadata":{"id":"iaBnfDk34MK7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647396198436,"user_tz":240,"elapsed":3034,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"adbb18eb-003e-4e9e-eb74-d4aaaf08266f"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['',\n"," '[UNK]',\n"," 'and',\n"," 'to',\n"," 'the',\n"," 'of',\n"," 'a',\n"," 'in',\n"," 'with',\n"," 'for',\n"," 'is',\n"," 'our',\n"," 'we',\n"," 'are',\n"," 'you',\n"," 'as',\n"," 'be',\n"," 'on',\n"," 'work',\n"," 'or',\n"," 'will',\n"," 'that',\n"," 'an',\n"," 'experience',\n"," 'team',\n"," 'have',\n"," 'your',\n"," 'all',\n"," 'business',\n"," 'at',\n"," 'new',\n"," 'company',\n"," 'by',\n"," 'from',\n"," 'their',\n"," 'customer',\n"," 'this',\n"," 'management',\n"," 'sales',\n"," 'development',\n"," '\\xa0',\n"," 'amp',\n"," 'working',\n"," 'skills',\n"," 'services',\n"," 'it',\n"," 'service',\n"," 'us',\n"," 'years',\n"," 'other',\n"," 'looking',\n"," 'people',\n"," 'marketing',\n"," 'who',\n"," 'design',\n"," 'product',\n"," 'not',\n"," 'time',\n"," 'can',\n"," 'solutions',\n"," 'clients',\n"," 'data',\n"," 'more',\n"," 'software',\n"," 'including',\n"," 'help',\n"," 'support',\n"," 'ability',\n"," 'knowledge',\n"," 'job',\n"," 'but',\n"," 'technology',\n"," 'web',\n"," 'communication',\n"," 'provide',\n"," 'customers',\n"," 'about',\n"," 'through',\n"," 'well',\n"," 'project',\n"," 'client',\n"," 'quality',\n"," 'best',\n"," 'also',\n"," 'technical',\n"," 'environment',\n"," 'opportunity',\n"," 'one',\n"," 'based',\n"," 'products',\n"," 'has',\n"," 'up',\n"," 'within',\n"," 'into',\n"," 'high',\n"," 'office',\n"," 'great',\n"," 'position',\n"," 'professional',\n"," 'strong',\n"," 'role',\n"," 'make',\n"," 'companies',\n"," '–',\n"," 'digital',\n"," 'able',\n"," 'industry',\n"," 'part',\n"," 'media',\n"," 'mobile',\n"," 'get',\n"," 'ensure',\n"," 'like',\n"," 'training',\n"," 'if',\n"," 'social',\n"," 'must',\n"," 'process',\n"," 'over',\n"," 'both',\n"," 'do',\n"," 'growing',\n"," 'information',\n"," 'projects',\n"," 'online',\n"," 'employees',\n"," 'want',\n"," 'using',\n"," 'they',\n"," 'degree',\n"," 'engineering',\n"," 'creative',\n"," 'them',\n"," 'full',\n"," 'build',\n"," 'across',\n"," 'benefits',\n"," 'join',\n"," 'systems',\n"," 'required',\n"," 'candidate',\n"," 'manager',\n"," 'world',\n"," 'understanding',\n"," 'out',\n"," 'some',\n"," 'building',\n"," 'right',\n"," 'develop',\n"," 'what',\n"," 'need',\n"," 'its',\n"," 'related',\n"," 'such',\n"," 'level',\n"," 'global',\n"," 'when',\n"," 'any',\n"," 'care',\n"," 'where',\n"," 'every',\n"," 'most',\n"," 'performance',\n"," 'opportunities',\n"," 'which',\n"," 'highly',\n"," 'candidates',\n"," 'offer',\n"," 'include',\n"," 'written',\n"," 'year',\n"," 'so',\n"," 'than',\n"," 'good',\n"," 'applications',\n"," 'growth',\n"," 'successful',\n"," 'create',\n"," 'health',\n"," 'drive',\n"," 'leading',\n"," 'responsible',\n"," 'startup',\n"," 'career',\n"," 'take',\n"," 'use',\n"," 'excellent',\n"," 'content',\n"," 'manage',\n"," 'financial',\n"," 'tools',\n"," 'needs',\n"," 'each',\n"," 'paid',\n"," 'andor',\n"," 'way',\n"," 'teams',\n"," 'how',\n"," 'market',\n"," 'success',\n"," 'providing',\n"," 'life',\n"," 'platform',\n"," 'apply',\n"," 'competitive',\n"," 'requirements',\n"," 'website',\n"," 'while',\n"," 'just',\n"," 'staff',\n"," 'deliver',\n"," 'around',\n"," 'learn',\n"," 'home',\n"," 'user',\n"," 'only',\n"," 'system',\n"," 'innovative',\n"," 'multiple',\n"," 'love',\n"," 'production',\n"," 'we’re',\n"," 'application',\n"," 'fast',\n"," 'hours',\n"," 'english',\n"," 'lead',\n"," 'day',\n"," 'senior',\n"," 'small',\n"," 'may',\n"," 'relationships',\n"," 'processes',\n"," 'technologies',\n"," 'delivery',\n"," 'passionate',\n"," 'international',\n"," 'grow',\n"," 'own',\n"," 'key',\n"," 'personal',\n"," 'improve',\n"," 'community',\n"," 'computer',\n"," 'meet',\n"," 'learning',\n"," 'operations',\n"," 'relevant',\n"," 'many',\n"," 'developing',\n"," 'first',\n"," 'maintain',\n"," 'focus',\n"," 'account',\n"," 'large',\n"," 'following',\n"," 'per',\n"," 'field',\n"," 'these',\n"," 'insurance',\n"," 'travel',\n"," 'managing',\n"," 'were',\n"," 'no',\n"," 'network',\n"," 'current',\n"," 'would',\n"," 'individual',\n"," 'search',\n"," 'very',\n"," 'been',\n"," 'members',\n"," 'believe',\n"," 'open',\n"," 'available',\n"," 'various',\n"," 'medical',\n"," 'agency',\n"," 'should',\n"," 'communications',\n"," 'research',\n"," 'test',\n"," 'long',\n"," 'plan',\n"," 'understand',\n"," 'tasks',\n"," 'existing',\n"," 'employee',\n"," 'seeking',\n"," 'brand',\n"," 'effectively',\n"," 'exciting',\n"," 'talented',\n"," 'results',\n"," 'after',\n"," 'positions',\n"," 'strategy',\n"," 'salary',\n"," 'duties',\n"," 'least',\n"," 'internal',\n"," 'value',\n"," 'recruitment',\n"," 'education',\n"," 'daily',\n"," 'vision',\n"," 'group',\n"," 'culture',\n"," 'email',\n"," 'real',\n"," 'testing',\n"," 'passion',\n"," 'verbal',\n"," 'record',\n"," 'problems',\n"," 'top',\n"," 'delivering',\n"," 'analysis',\n"," 'program',\n"," 'know',\n"," 'range',\n"," 'planning',\n"," 'leadership',\n"," 'big',\n"," 'perform',\n"," 'closely',\n"," 'currently',\n"," 'developer',\n"," '2',\n"," 'security',\n"," 'ca',\n"," 'ideas',\n"," 'finance',\n"," 'start',\n"," 'experienced',\n"," 'events',\n"," 'being',\n"," 'potential',\n"," 'please',\n"," 'reports',\n"," 'brands',\n"," 'you’ll',\n"," 'resources',\n"," 'free',\n"," 'change',\n"," 'activities',\n"," 'manufacturing',\n"," 'without',\n"," 'offers',\n"," 'complex',\n"," 'mission',\n"," 'making',\n"," 'fun',\n"," '•',\n"," '3',\n"," 'consulting',\n"," 'then',\n"," 'reporting',\n"," 'san',\n"," 'programs',\n"," 'safety',\n"," 'school',\n"," 'jobs',\n"," 'now',\n"," 'microsoft',\n"," 'creating',\n"," 'issues',\n"," 'directly',\n"," '5',\n"," 'hard',\n"," 'there',\n"," 'talent',\n"," 'organization',\n"," 'equipment',\n"," 'retail',\n"," 'person',\n"," 'months',\n"," 'enterprise',\n"," 'employment',\n"," 'communicate',\n"," 'provides',\n"," 'areas',\n"," 'unique',\n"," 'cost',\n"," '1',\n"," 'background',\n"," 'site',\n"," 'dental',\n"," 'increase',\n"," 'strategic',\n"," 'businesses',\n"," 'partners',\n"," 'dynamic',\n"," 'flexible',\n"," 'individuals',\n"," 'come',\n"," 'motivated',\n"," 'writing',\n"," 'access',\n"," 'analytics',\n"," 'plans',\n"," 'users',\n"," 'future',\n"," 'phone',\n"," 'order',\n"," 'effective',\n"," 'engineer',\n"," 'driven',\n"," 'different',\n"," 'implementation',\n"," 'control',\n"," 'goals',\n"," 'local',\n"," 'under',\n"," 'between',\n"," 'track',\n"," 'plus',\n"," 'attention',\n"," 'hr',\n"," 'located',\n"," 'ideal',\n"," 'standards',\n"," 'problem',\n"," 'professionals',\n"," 'things',\n"," 'achieve',\n"," 'direct',\n"," 'developers',\n"," 'contact',\n"," 'managers',\n"," 'internet',\n"," 'offices',\n"," 'excel',\n"," 'operating',\n"," 'think',\n"," 'monthly',\n"," 'code',\n"," 'next',\n"," 'expertise',\n"," 'maintenance',\n"," 'national',\n"," 'place',\n"," 'those',\n"," 'interested',\n"," 'document',\n"," 'approach',\n"," 'procedures',\n"," 'firm',\n"," 'play',\n"," 'partner',\n"," 'was',\n"," 'science',\n"," 'human',\n"," 'tech',\n"," 'equivalent',\n"," 'contract',\n"," 'better',\n"," 'advertising',\n"," 'responsibilities',\n"," 'someone',\n"," 'assist',\n"," 'number',\n"," 'general',\n"," 'throughout',\n"," 'preferred',\n"," 'package',\n"," 'quickly',\n"," 'leader',\n"," 'find',\n"," 'minimum',\n"," 'practices',\n"," 'core',\n"," 'london',\n"," 'appropriate',\n"," 'member',\n"," 'during',\n"," 'established',\n"," 'maintaining',\n"," 'director',\n"," 'together',\n"," 'status',\n"," 'share',\n"," 'set',\n"," 'corporate',\n"," 'engineers',\n"," 'area',\n"," 'food',\n"," 'permanent',\n"," 'secure',\n"," 'video',\n"," 'campaigns',\n"," 'proven',\n"," 'days',\n"," 'shall',\n"," 'vacation',\n"," 'become',\n"," 'assigned',\n"," 'hiring',\n"," 'fastpaced',\n"," 'levels',\n"," '6',\n"," 'implement',\n"," 'ensuring',\n"," 'end',\n"," 'bring',\n"," 'strategies',\n"," 'variety',\n"," 'innovation',\n"," 'identify',\n"," 'organizational',\n"," 'keep',\n"," 'friendly',\n"," 'impact',\n"," 'fulltime',\n"," 'solving',\n"," 'word',\n"," 'solution',\n"," 'goal',\n"," 'focused',\n"," 'executive',\n"," 'detail',\n"," 'department',\n"," 'positive',\n"," 'outside',\n"," 'enjoy',\n"," 'you’re',\n"," 'employer',\n"," 'analytical',\n"," 'see',\n"," 'recruiting',\n"," 'requires',\n"," 'highest',\n"," '\\xa0we',\n"," 'complete',\n"," 'center',\n"," 'limited',\n"," 'mail',\n"," 'agile',\n"," 'exceptional',\n"," 'specific',\n"," 'windows',\n"," 'live',\n"," 'always',\n"," 'abroad',\n"," 'supporting',\n"," 'via',\n"," 'javascript',\n"," 'helping',\n"," 'accounting',\n"," 'documentation',\n"," 'commercial',\n"," 'credit',\n"," 'safe',\n"," 'productivity',\n"," 'dedicated',\n"," 'includes',\n"," 'pay',\n"," 'awesome',\n"," 'committed',\n"," '30',\n"," 'designers',\n"," 'driving',\n"," 'york',\n"," 'two',\n"," 'database',\n"," 'timely',\n"," 'satisfaction',\n"," 'important',\n"," 'public',\n"," 'interpersonal',\n"," 'entry',\n"," 'call',\n"," 'experiences',\n"," 'tx',\n"," 'calls',\n"," 'changing',\n"," 'feel',\n"," 'programming',\n"," 'google',\n"," 'possible',\n"," 'functional',\n"," 'provided',\n"," 'ny',\n"," 'base',\n"," 'made',\n"," 'independently',\n"," 'week',\n"," 'server',\n"," 'language',\n"," 'space',\n"," 'others',\n"," 'rapidly',\n"," 'collaborative',\n"," 'amazing',\n"," 'consumer',\n"," 'resume',\n"," 'capital',\n"," 'responsibility',\n"," 'attitude',\n"," 'app',\n"," 'major',\n"," 'java',\n"," 'healthcare',\n"," 'month',\n"," 'basic',\n"," 'administrative',\n"," 'comprehensive',\n"," '100',\n"," 'compliance',\n"," 'challenges',\n"," 'sql',\n"," 'etc',\n"," 'needed',\n"," 'accounts',\n"," 'private',\n"," 'give',\n"," 'meetings',\n"," 'policies',\n"," 'ms',\n"," 'diverse',\n"," 'wide',\n"," 'energy',\n"," 'city',\n"," 'term',\n"," 'thinking',\n"," 'cover',\n"," 'because',\n"," 'willing',\n"," 'simple',\n"," 'ios',\n"," 'youll',\n"," 'diploma',\n"," 'student',\n"," 'agencies',\n"," 'apps',\n"," 'values',\n"," 'review',\n"," 'latest',\n"," 'infrastructure',\n"," 'founded',\n"," 'used',\n"," 'intelligence',\n"," 'medium',\n"," 'integration',\n"," 'i',\n"," 'everyone',\n"," 'compensation',\n"," 'practice',\n"," 'portfolio',\n"," 'organizations',\n"," 'much',\n"," 'go',\n"," 'ecommerce',\n"," 'why',\n"," 'schedule',\n"," 'disability',\n"," 'off',\n"," 'external',\n"," 'state',\n"," 'hire',\n"," 'execute',\n"," 'since',\n"," 'revenue',\n"," 'young',\n"," 'match',\n"," 'qualified',\n"," 'largest',\n"," 'trends',\n"," 'ongoing',\n"," 'essential',\n"," 'visual',\n"," 'comfortable',\n"," 'back',\n"," 'something',\n"," 'expert',\n"," 'main',\n"," 'cloud',\n"," 'means',\n"," 'works',\n"," 'it’s',\n"," 'look',\n"," 'direction',\n"," 'assistant',\n"," 'necessary',\n"," 'additional',\n"," 'location',\n"," 'interest',\n"," 'weekly',\n"," 'entrepreneurial',\n"," 'platforms',\n"," 'description',\n"," 'even',\n"," 'consultants',\n"," '401k',\n"," 'family',\n"," 'solve',\n"," '10',\n"," 'uk',\n"," 'meeting',\n"," 'follow',\n"," 'apprenticeship',\n"," 'here',\n"," 'android',\n"," 'critical',\n"," 'features',\n"," 'challenging',\n"," 'source',\n"," 'efficient',\n"," 'aspects',\n"," 'same',\n"," 'oriented',\n"," 'suite',\n"," 'decisions',\n"," 'consumers',\n"," 'representative',\n"," 'smart',\n"," 'bonus',\n"," 'point',\n"," 'pride',\n"," 'enhance',\n"," 'title',\n"," 'selling',\n"," 'operational',\n"," 'experts',\n"," 'built',\n"," 'advanced',\n"," 'staffing',\n"," 'openings',\n"," 'healthy',\n"," 'promote',\n"," '4',\n"," 'teaching',\n"," 'done',\n"," 'materials',\n"," 'require',\n"," 'questions',\n"," 'integrity',\n"," 'regular',\n"," 'languages',\n"," 'check',\n"," 'architecture',\n"," 'offering',\n"," 'leads',\n"," 'investors',\n"," 'sense',\n"," 'holidays',\n"," 'along',\n"," 'specialist',\n"," 'report',\n"," 'hardware',\n"," 'administration',\n"," 'receive',\n"," 'bi',\n"," 'functions',\n"," 'engagement',\n"," 'countries',\n"," 'scale',\n"," 'everything',\n"," 'head',\n"," 'de',\n"," 'close',\n"," 'ad',\n"," 'similar',\n"," 'principles',\n"," 'edge',\n"," 'closing',\n"," 'having',\n"," 'expected',\n"," 'million',\n"," '200',\n"," 'outstanding',\n"," 'flexibility',\n"," 'upon',\n"," 'delivers',\n"," 'accurate',\n"," 'taking',\n"," 'successfully',\n"," 'associate',\n"," 'special',\n"," 'government',\n"," 'ambitious',\n"," 'handle',\n"," 'performing',\n"," 'overall',\n"," 'monitoring',\n"," 'estate',\n"," 'interactive',\n"," 'possess',\n"," 'oral',\n"," 'inhouse',\n"," 'skilled',\n"," 'construction',\n"," 'sector',\n"," 'power',\n"," 'patient',\n"," 'integrated',\n"," 'present',\n"," 'c',\n"," 'equal',\n"," 'generation',\n"," 'relationship',\n"," 'target',\n"," 'model',\n"," 'send',\n"," 'processing',\n"," 'line',\n"," 'involved',\n"," 'supply',\n"," 'optimize',\n"," 'html',\n"," 'trusted',\n"," 'providers',\n"," 'maximize',\n"," 'independent',\n"," 'eg',\n"," 'locations',\n"," 'helps',\n"," 'united',\n"," 'solid',\n"," 'improvement',\n"," 'world’s',\n"," 'students',\n"," 'interview',\n"," 'options',\n"," 'inc',\n"," 'environments',\n"," 'really',\n"," 'designer',\n"," 'net',\n"," 'doing',\n"," 'company’s',\n"," 'feedback',\n"," 'backed',\n"," 'basis',\n"," 'above',\n"," 'running',\n"," 'documents',\n"," 'difference',\n"," 'themselves',\n"," 'addition',\n"," 'handling',\n"," 'execution',\n"," 'applicants',\n"," 'provider',\n"," 'startups',\n"," 'forward',\n"," 'clean',\n"," 'thousands',\n"," 'collaboration',\n"," 'active',\n"," 'submit',\n"," 'sites',\n"," 'desire',\n"," 'contribute',\n"," 'reliable',\n"," 'engage',\n"," 'heart',\n"," 'created',\n"," 'money',\n"," 'acquisition',\n"," 'physical',\n"," 'markets',\n"," 'expanding',\n"," 'biggest',\n"," 'european',\n"," 'due',\n"," 'standard',\n"," 'easy',\n"," 'move',\n"," 'energetic',\n"," 'demonstrate',\n"," 'lnd',\n"," 'frontend',\n"," 'challenge',\n"," 'websites',\n"," 'venture',\n"," 'php',\n"," 'copy',\n"," 'paced',\n"," 'requests',\n"," 'continuous',\n"," 'presentation',\n"," 'preferably',\n"," 'costs',\n"," 'before',\n"," 'previous',\n"," 'serve',\n"," 'leaders',\n"," 'sell',\n"," 'worldwide',\n"," 'excited',\n"," 'concepts',\n"," 'industrial',\n"," 'empower',\n"," 'several',\n"," 'designing',\n"," 'yourself',\n"," 'drug',\n"," 'clear',\n"," 'list',\n"," 'anyone',\n"," 'lives',\n"," 'face',\n"," 'commitment',\n"," '50',\n"," 'ready',\n"," 'player',\n"," 'industries',\n"," 'departments',\n"," 'css',\n"," 'campaign',\n"," 'qualifications',\n"," 'few',\n"," 'beauty',\n"," 'reduce',\n"," 'networking',\n"," 'extensive',\n"," 'integrate',\n"," 'facebook',\n"," 'deep',\n"," 'personnel',\n"," 'en',\n"," 'three',\n"," 'store',\n"," 'considered',\n"," 'entrepreneurs',\n"," 'dedication',\n"," 'ways',\n"," 'manner',\n"," 'takes',\n"," 'nontechnical',\n"," 'fastgrowing',\n"," 'electrical',\n"," 'detailed',\n"," 'click',\n"," 'trust',\n"," 'serving',\n"," 'game',\n"," 'early',\n"," 'volume',\n"," 'material',\n"," 'efforts',\n"," 'saas',\n"," 'continually',\n"," 'primary',\n"," 'towards',\n"," 'investment',\n"," 'funding',\n"," '20',\n"," 'qualification',\n"," 'sure',\n"," 'handson',\n"," 'courses',\n"," 'veterans',\n"," 'modern',\n"," 'front',\n"," 'cutting',\n"," 'continued',\n"," 'college',\n"," 'drivers',\n"," 'assistance',\n"," 'teachers',\n"," 'teacher',\n"," 'legal',\n"," 'expect',\n"," 'write',\n"," 'ownership',\n"," 'inventory',\n"," 'budget',\n"," 'fit',\n"," 'interactions',\n"," 'chance',\n"," 'beautiful',\n"," 'action',\n"," 'objectives',\n"," 'license',\n"," 'add',\n"," 'university',\n"," 'initiative',\n"," 'getting',\n"," 'enthusiastic',\n"," 'whilst',\n"," 'course',\n"," 'environmental',\n"," 'recruiters',\n"," 'implementing',\n"," 'don’t',\n"," 'significant',\n"," 'sap',\n"," 'central',\n"," 'automation',\n"," 'oil',\n"," 'annual',\n"," 'type',\n"," 'news',\n"," 'integral',\n"," 'entire',\n"," '12',\n"," 'ruby',\n"," 'clinical']"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["processed_text = text_vectorization(dataset)"],"metadata":{"id":"ywrAyi4WwQyF","executionInfo":{"status":"ok","timestamp":1647396199355,"user_tz":240,"elapsed":922,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"fZ-8f3P9RSXQ","executionInfo":{"status":"ok","timestamp":1647396199355,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["one_hot = tf.one_hot(processed_text, depth=100)"],"metadata":{"id":"jIp-qfDIwUC7","executionInfo":{"status":"ok","timestamp":1647396199687,"user_tz":240,"elapsed":334,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# processed_text = text_vectorization(text_info)\n","# one_hot = tf.one_hot(processed_text, depth=1000) # we one-hot encode those, so it becomes a length x1000 vector.\n","\n","# print(one_hot.shape)"],"metadata":{"id":"fuDMrCmgKAD3","executionInfo":{"status":"ok","timestamp":1647396199687,"user_tz":240,"elapsed":2,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jE1NfRcEiVd3"},"source":["##EDA"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"oee-H5xAilKD","executionInfo":{"status":"ok","timestamp":1647396199687,"user_tz":240,"elapsed":2,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["####Sort the location? company logo?"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"MblbJsdkphZv","executionInfo":{"status":"ok","timestamp":1647396199687,"user_tz":240,"elapsed":2,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["##"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"ddkllKHPpkGo","executionInfo":{"status":"ok","timestamp":1647396210044,"user_tz":240,"elapsed":10359,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# tokenize the text\n","cv = CountVectorizer(max_features=1000)\n","dtm = cv.fit_transform(text_info).toarray()"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"Ah7Qdq39pwrF","executionInfo":{"status":"ok","timestamp":1647396210045,"user_tz":240,"elapsed":10,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# make a dataset for the model\n","df2 = pd.DataFrame(dtm, columns=cv.get_feature_names_out())\n"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"6lpKHoBmp04X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647396210045,"user_tz":240,"elapsed":9,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"8e3e86ed-2e3e-4bfa-835b-78b17c26adf0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(17879, 1000)"]},"metadata":{},"execution_count":19}],"source":["df2.shape"]},{"cell_type":"code","source":["17879*0.7"],"metadata":{"id":"WZtoOJH0Niil","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647396210045,"user_tz":240,"elapsed":8,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"1cd41e9e-b63f-4f48-8a40-6bf4f82736b8"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["12515.3"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","execution_count":21,"metadata":{"id":"e-hG1yoMqAy2","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1647396210045,"user_tz":240,"elapsed":7,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"26231dfc-4681-4f50-a044-000e35e52745"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       000  10  100  12  1500  18  20  200  30  40  ...  write  writing  \\\n","4408     0   3    1   1     0   0   1    0   0   1  ...      0        1   \n","11178    1   1    0   0     0   0   1    0   0   0  ...      0        0   \n","2969     0   0    0   0     0   0   0    0   0   0  ...      0        0   \n","9127     0   0    0   0     0   0   0    0   0   0  ...      0        0   \n","7776     2   1    4   0     0   0   0    0   0   0  ...      0        0   \n","\n","       written  year  years  york  you  young  your  yourself  \n","4408         0     0      1     1    4      0     0         0  \n","11178        0     2      0     0    0      0     0         0  \n","2969         0     2      4     0    0      0     0         0  \n","9127         0     0      0     0    2      0     1         0  \n","7776         0     0      2     0    1      0     3         0  \n","\n","[5 rows x 1000 columns]"],"text/html":["\n","  <div id=\"df-eae4b867-1915-468d-ae53-f0222b420e55\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>000</th>\n","      <th>10</th>\n","      <th>100</th>\n","      <th>12</th>\n","      <th>1500</th>\n","      <th>18</th>\n","      <th>20</th>\n","      <th>200</th>\n","      <th>30</th>\n","      <th>40</th>\n","      <th>...</th>\n","      <th>write</th>\n","      <th>writing</th>\n","      <th>written</th>\n","      <th>year</th>\n","      <th>years</th>\n","      <th>york</th>\n","      <th>you</th>\n","      <th>young</th>\n","      <th>your</th>\n","      <th>yourself</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4408</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11178</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2969</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9127</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7776</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 1000 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eae4b867-1915-468d-ae53-f0222b420e55')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eae4b867-1915-468d-ae53-f0222b420e55 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eae4b867-1915-468d-ae53-f0222b420e55');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}],"source":["df2.sample(5)"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"q0Wu9pF9aHlJ","executionInfo":{"status":"ok","timestamp":1647396210045,"user_tz":240,"elapsed":6,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# df2[numeric] = job[numeric]"]},{"cell_type":"code","source":["# df2.dropna(inplace=True)"],"metadata":{"id":"kwDZ1X-bone9","executionInfo":{"status":"ok","timestamp":1647396210046,"user_tz":240,"elapsed":7,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","execution_count":24,"metadata":{"id":"LZnDbV9zaLMa","executionInfo":{"status":"ok","timestamp":1647396210046,"user_tz":240,"elapsed":7,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["try_1 = df2.to_numpy()"]},{"cell_type":"markdown","metadata":{"id":"L1OZ_GzwkrTP"},"source":["##Spacy its like another pre-trained model, discuss to leave or del"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"shfPueNSksmX","executionInfo":{"status":"ok","timestamp":1647396210046,"user_tz":240,"elapsed":7,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# model = \"en_core_web_lg\" #md\n","# cli.download(model)\n","# nlp = spacy.load(model)"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"SS-LGeEwk6F5","executionInfo":{"status":"ok","timestamp":1647396210046,"user_tz":240,"elapsed":6,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# nlp.pipe_names"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"oejsC_4Hk7hT","executionInfo":{"status":"ok","timestamp":1647396210245,"user_tz":240,"elapsed":205,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# #process the text\n","# EXCL = ['tagger', 'parser', 'attribute_ruler', 'lemmatizer', 'ner']\n","# docs = list(nlp.pipe(text_info[0:1000], disable=EXCL))"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"Nh79J8Apk9dR","executionInfo":{"status":"ok","timestamp":1647396210245,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# #Get the vectors\n","# dv = [doc.vector for doc in docs]\n","# dv = np.array(dv)\n","# dv.shape"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"qpW0JbN3lAkf","executionInfo":{"status":"ok","timestamp":1647396210245,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# goal = pd.DataFrame(dv, index=job.index, columns=range(0,300))"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"ASO3RMp2lmpv","executionInfo":{"status":"ok","timestamp":1647396210245,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# goal.head()"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"XAPqGqYhluVJ","executionInfo":{"status":"ok","timestamp":1647396210245,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# job.head()"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"BmdTvziavFTF","executionInfo":{"status":"ok","timestamp":1647396210245,"user_tz":240,"elapsed":2,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# job['required_experience'].unique()"]},{"cell_type":"code","execution_count":33,"metadata":{"id":"fdHs-nNNlw5e","executionInfo":{"status":"ok","timestamp":1647396210246,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# numeric = ['telecommuting', 'has_company_logo','has_questions']"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"McfUZVU_mBhi","executionInfo":{"status":"ok","timestamp":1647396210246,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# goal[numeric] = job[numeric]"]},{"cell_type":"code","execution_count":35,"metadata":{"id":"uVvQFA5bmF-N","executionInfo":{"status":"ok","timestamp":1647396210246,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# goal.head()"]},{"cell_type":"code","execution_count":36,"metadata":{"id":"u_HNBzbkmIhc","executionInfo":{"status":"ok","timestamp":1647396210246,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# #Utilize uMAP for Dimension reduction \n","# umap = UMAP(random_state=865)\n","# embeds = umap.fit_transform(goal)"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"YnTr5tCBmI0e","executionInfo":{"status":"ok","timestamp":1647396210246,"user_tz":240,"elapsed":3,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["# embeds.shape"]},{"cell_type":"markdown","metadata":{"id":"-dJ0mYC_oJ8k"},"source":["##NN"]},{"cell_type":"code","source":["from keras import layers\n","def build_model():\n","    inputs = keras.layers.Input(shape=(1), dtype=\"string\") # We take our strings as input \n","    processing = text_vectorization(inputs)\n","    one_hot = tf.one_hot(processing, depth=2000) # we one-hot encode those, so it becomes a length x2000 vector.\n","    x = layers.Bidirectional(layers.LSTM(32))(one_hot)\n","    x = layers.Dropout(0.5)(x)\n","    outputs = layers.Dense(1, activation=\"sigmoid\")(x)\n","\n","    model = keras.Model(inputs,outputs)\n","    model.compile(optimizer=\"rmsprop\",loss=\"binary_crossentropy\",metrics=['accuracy'])\n","    return model\n","\n","model = build_model()\n","\n","keras.utils.plot_model(model, show_shapes=True)"],"metadata":{"id":"FKwezYrMMsnH","colab":{"base_uri":"https://localhost:8080/","height":644},"executionInfo":{"status":"ok","timestamp":1647396211473,"user_tz":240,"elapsed":1230,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"c0caea34-7003-4049-f42e-abf74de78541"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"\n"},"metadata":{},"execution_count":38}]},{"cell_type":"code","execution_count":39,"metadata":{"id":"90tAMk-Mrte0","executionInfo":{"status":"ok","timestamp":1647396211473,"user_tz":240,"elapsed":2,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["data_train = dataset[:6300]\n","labels_train = label[:6300]\n","data_test = text_info[6300:]\n","labels_test = label[6300:]"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"Ulh5UKUZrvZd","colab":{"base_uri":"https://localhost:8080/","height":663},"executionInfo":{"status":"error","timestamp":1647396338131,"user_tz":240,"elapsed":126659,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}},"outputId":"6f326db8-5b0d-4360-c297-d88666a58b1e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/25\n","189/189 [==============================] - 24s 101ms/step - loss: 0.0315 - accuracy: 0.9945 - val_loss: 3.0670e-06 - val_accuracy: 1.0000\n","Epoch 2/25\n","189/189 [==============================] - 18s 94ms/step - loss: 3.2201e-06 - accuracy: 1.0000 - val_loss: 1.6253e-08 - val_accuracy: 1.0000\n","Epoch 3/25\n","189/189 [==============================] - 18s 95ms/step - loss: 1.0501e-07 - accuracy: 1.0000 - val_loss: 1.0336e-09 - val_accuracy: 1.0000\n","Epoch 4/25\n","189/189 [==============================] - 18s 95ms/step - loss: 2.2420e-08 - accuracy: 1.0000 - val_loss: 3.3456e-10 - val_accuracy: 1.0000\n","Epoch 5/25\n","189/189 [==============================] - 18s 94ms/step - loss: 1.2637e-08 - accuracy: 1.0000 - val_loss: 1.5905e-10 - val_accuracy: 1.0000\n","Epoch 6/25\n","189/189 [==============================] - 18s 94ms/step - loss: 8.5667e-09 - accuracy: 1.0000 - val_loss: 9.6245e-11 - val_accuracy: 1.0000\n","Epoch 7/25\n","152/189 [=======================>......] - ETA: 2s - loss: 5.9221e-09 - accuracy: 1.0000"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-40-2ace9b71361d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     23\u001b[0m     history = model.fit(training_data, training_targets, \n\u001b[1;32m     24\u001b[0m                         \u001b[0mvalidation_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mvalidation_data\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mvalidation_targets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m                         epochs=num_epochs, batch_size=batch_sizes)\n\u001b[0m\u001b[1;32m     26\u001b[0m     \u001b[0mval_loss_history\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_loss'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m     \u001b[0mval_acc_history\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1387\u001b[0m               \u001b[0mlogs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtmp_logs\u001b[0m  \u001b[0;31m# No error, now safe to assign to logs.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1388\u001b[0m               \u001b[0mend_step\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstep\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep_increment\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1389\u001b[0;31m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mend_step\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1390\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstop_training\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1391\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/callbacks.py\u001b[0m in \u001b[0;36mon_train_batch_end\u001b[0;34m(self, batch, logs)\u001b[0m\n\u001b[1;32m    436\u001b[0m     \"\"\"\n\u001b[1;32m    437\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_should_call_train_batch_hooks\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 438\u001b[0;31m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mModeKeys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTRAIN\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'end'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    439\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    440\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mon_test_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/callbacks.py\u001b[0m in \u001b[0;36m_call_batch_hook\u001b[0;34m(self, mode, hook, batch, logs)\u001b[0m\n\u001b[1;32m    295\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_begin_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    296\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mhook\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'end'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 297\u001b[0;31m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_end_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    298\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    299\u001b[0m       raise ValueError(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/callbacks.py\u001b[0m in \u001b[0;36m_call_batch_end_hook\u001b[0;34m(self, mode, batch, logs)\u001b[0m\n\u001b[1;32m    316\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_batch_times\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch_time\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    317\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 318\u001b[0;31m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_hook_helper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhook_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    319\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    320\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_batch_times\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_batches_for_timing_check\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/callbacks.py\u001b[0m in \u001b[0;36m_call_batch_hook_helper\u001b[0;34m(self, hook_name, batch, logs)\u001b[0m\n\u001b[1;32m    354\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mcallback\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    355\u001b[0m       \u001b[0mhook\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcallback\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhook_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 356\u001b[0;31m       \u001b[0mhook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    357\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    358\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_timing\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/callbacks.py\u001b[0m in \u001b[0;36mon_train_batch_end\u001b[0;34m(self, batch, logs)\u001b[0m\n\u001b[1;32m   1032\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1033\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mon_train_batch_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1034\u001b[0;31m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_batch_update_progbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1035\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1036\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mon_test_batch_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/callbacks.py\u001b[0m in \u001b[0;36m_batch_update_progbar\u001b[0;34m(self, batch, logs)\u001b[0m\n\u001b[1;32m   1105\u001b[0m       \u001b[0;31m# Only block async when verbose = 1.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1106\u001b[0m       \u001b[0mlogs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf_utils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msync_to_numpy_or_python_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1107\u001b[0;31m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprogbar\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mseen\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfinalize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1108\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1109\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_finalize_progbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcounter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, current, values, finalize)\u001b[0m\n\u001b[1;32m    974\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    975\u001b[0m       \u001b[0mmessage\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0minfo\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 976\u001b[0;31m       \u001b[0mio_utils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_msg\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mline_break\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    977\u001b[0m       \u001b[0mmessage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    978\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/io_utils.py\u001b[0m in \u001b[0;36mprint_msg\u001b[0;34m(message, line_break)\u001b[0m\n\u001b[1;32m     36\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m       \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdout\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m     \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdout\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflush\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/iostream.py\u001b[0m in \u001b[0;36mflush\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    347\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpub_thread\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mschedule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    348\u001b[0m                 \u001b[0;31m# and give a timeout to avoid\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 349\u001b[0;31m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mevt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflush_timeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    350\u001b[0m                     \u001b[0;31m# write directly to __stderr__ instead of warning because\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    351\u001b[0m                     \u001b[0;31m# if this is happening sys.stderr may be the problem.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/threading.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    550\u001b[0m             \u001b[0msignaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_flag\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    551\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0msignaled\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 552\u001b[0;31m                 \u001b[0msignaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cond\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    553\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0msignaled\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    554\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/threading.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    298\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    299\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 300\u001b[0;31m                     \u001b[0mgotit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwaiter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    301\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    302\u001b[0m                     \u001b[0mgotit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwaiter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["k = 4\n","num_validation_samples = len(data_train) // k\n","num_epochs = 25\n","batch_sizes = 25\n","all_loss_histories = []\n","all_val_loss_histories = []  \n","all_acc_histories = []\n","all_val_acc_histories = []\n","\n","# For each validation fold, we will train a full set of epochs, and store the history. \n","for fold in range(k):\n","    validation_data = data_train[num_validation_samples * fold:\n","                           num_validation_samples * (fold + 1)]\n","    validation_targets = labels_train[num_validation_samples * fold:\n","                           num_validation_samples * (fold + 1)]\n","    training_data = np.concatenate([\n","        data_train[:num_validation_samples * fold],\n","        data_train[num_validation_samples * (fold + 1):]])\n","    training_targets = np.concatenate([\n","        labels_train[:num_validation_samples * fold],\n","        labels_train[num_validation_samples * (fold + 1):]])\n","    model = build_model()\n","    history = model.fit(training_data, training_targets, \n","                        validation_data = (validation_data,validation_targets), \n","                        epochs=num_epochs, batch_size=batch_sizes)\n","    val_loss_history = history.history['val_loss']\n","    val_acc_history = history.history['val_accuracy']\n","    loss_history = history.history['loss']\n","    acc_history = history.history['accuracy']\n","    all_val_loss_histories.append(val_loss_history)\n","    all_loss_histories.append(loss_history)\n","    all_val_acc_histories.append(val_acc_history)\n","    all_acc_histories.append(acc_history)\n","\n","average_loss_history = [np.mean([x[i] for x in all_loss_histories]) for i in range(num_epochs)]\n","average_val_loss_history = [np.mean([x[i] for x in all_val_loss_histories]) for i in range(num_epochs)]\n","average_acc_history = [np.mean([x[i] for x in all_acc_histories]) for i in range(num_epochs)]\n","average_val_acc_history = [np.mean([x[i] for x in all_val_acc_histories]) for i in range(num_epochs)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wFTV_2Wm8LPA","executionInfo":{"status":"aborted","timestamp":1647396338127,"user_tz":240,"elapsed":7,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"outputs":[],"source":["import matplotlib.pyplot as plt \n","plt.style.use('ggplot')\n","\n","plt.plot(average_loss_history,c='r')\n","plt.plot(average_acc_history,c=\"r\",linestyle=\"dashed\")\n","plt.plot(average_val_loss_history,c='b')\n","plt.plot(average_val_acc_history,c='b',linestyle=\"dashed\")\n","plt.xlabel(\"Epochs\")\n","plt.ylabel(\"Loss\")\n","plt.legend(['Training Loss','Training Accuracy','Validation Loss','Validation Accuracy'])\n","plt.show()"]},{"cell_type":"markdown","source":["##RNN for Text. Transformer /w Multi-Head Attention Layer*"],"metadata":{"id":"QaAN_bGxLaxm"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","  \n","class TransformerEncoder(layers.Layer):\n","    def __init__(self, embed_dim, dense_dim, num_heads, **kwargs): # Dense dim is how many nodes in the dense layer projection. # Embed dimension is dim of embeddings.\n","        super().__init__(**kwargs)\n","        self.embed_dim = embed_dim\n","        self.dense_dim = dense_dim\n","        self.num_heads = num_heads\n","        self.attention = layers.MultiHeadAttention(\n","            num_heads=num_heads, key_dim=embed_dim)\n","        self.dense_proj = keras.Sequential(\n","            [layers.Dense(dense_dim, activation=\"relu\"),\n","             layers.Dense(embed_dim),]\n","        )\n","        self.layernorm_1 = layers.LayerNormalization()\n","        self.layernorm_2 = layers.LayerNormalization()\n","    def call(self, inputs, mask=None):\n","        if mask is not None:\n","            mask = mask[:, tf.newaxis, :]\n","        attention_output = self.attention(\n","            inputs, inputs, attention_mask=mask)\n","        proj_input = self.layernorm_1(inputs + attention_output)\n","        proj_output = self.dense_proj(proj_input)\n","        return self.layernorm_2(proj_input + proj_output)\n","  \n","    def get_config(self):\n","        config = super().get_config()\n","        config.update({\n","            \"embed_dim\": self.embed_dim,\n","            \"num_heads\": self.num_heads,\n","            \"dense_dim\": self.dense_dim,\n","        })\n","        return config"],"metadata":{"id":"F32R63_ELfHv","executionInfo":{"status":"aborted","timestamp":1647396338128,"user_tz":240,"elapsed":7,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vocabulary = text_vectorization.get_vocabulary()\n","processed_text = text_vectorization(dataset)\n","\n","vocab_size = len(vocabulary)\n","embed_dim = 100\n","num_heads = 2\n","dense_dim = 32 # How many dense nodes in the transformer Dense layer\n","\n","def build_transformer():\n","\n","    inputs = keras.Input(shape=(None,), dtype=\"int64\")\n","\n","    # This model will learn its own custom embedding layer.\n","    x = layers.Embedding(vocab_size, embed_dim)(inputs)\n","    x = TransformerEncoder(embed_dim, dense_dim, num_heads)(x)\n","    x = layers.GlobalMaxPooling1D()(x)\n","    x = layers.Dropout(0.5)(x)\n","    outputs = layers.Dense(1, activation=\"sigmoid\")(x)\n","    model = keras.Model(inputs, outputs)\n","    model.compile(optimizer=\"rmsprop\",\n","                  loss=\"binary_crossentropy\",\n","                  metrics=[\"accuracy\"])\n","    \n","    return model\n","\n","model_transformer = build_transformer()\n","keras.utils.plot_model(model_transformer, show_shapes=True)"],"metadata":{"id":"OgDX9l5NIyrR","executionInfo":{"status":"aborted","timestamp":1647396338128,"user_tz":240,"elapsed":7,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","callbacks = [\n","    keras.callbacks.ModelCheckpoint(\n","        filepath=\"/content/drive/Shareddrives/BA865 Advanced Analytics/Dataset/convnet_from_scratch.keras/convnet_from_scratch.keras\",\n","        save_best_only=True,\n","        monitor=\"val_loss\")\n","]\n","model_transformer = build_transformer()\n","\n","history = model_transformer.fit(processed_text[:700], labels_train, validation_split=0.2, batch_size=1,epochs=20, callbacks=callbacks)"],"metadata":{"id":"luActwhhI6j9","executionInfo":{"status":"aborted","timestamp":1647396338129,"user_tz":240,"elapsed":8,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.style.use('ggplot')\n","\n","plt.plot(history.history['loss'],c=\"r\")\n","plt.plot(history.history['val_loss'],c=\"b\")\n","plt.plot(history.history['accuracy'],c=\"r\",linestyle=\"--\")\n","plt.plot(history.history['val_accuracy'],c=\"b\",linestyle=\"--\")\n","plt.legend(['Training Loss','Validation Loss','Training Acc','Validation Acc'])\n","plt.show()\n","\n","model = build_transformer()\n","model.load_weights(\"transformer_encoder.keras\")\n","print(f\"Test acc: {model.evaluate(processed_text[700:],labels_test)[1]:.3f}\")"],"metadata":{"id":"HleZG8jyRLjO","executionInfo":{"status":"aborted","timestamp":1647396338129,"user_tz":240,"elapsed":8,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Pre-trained model - embeddings"],"metadata":{"id":"G0MpOe6KUH3E"}},{"cell_type":"code","source":["#Model Using Bidirectional LSTM \n","def build_model_embed():\n","    inputs = keras.layers.Input(shape=(1), dtype=\"string\") # We take our strings as input \n","    processing = text_vectorization(inputs)\n","    \n","    # Truncates after 600 tokens, and pads up to 600 tokens for shorter reviews.\n","    # Mask zero means it will skip 0 tokens and will not pass them on.\n","    embedding = keras.layers.Embedding(input_dim=2000,output_dim=8,input_length=600, mask_zero=True)(processing)\n","    \n","    x = keras.layers.Bidirectional(keras.layers.LSTM(32))(embedding)\n","    x = keras.layers.Dropout(0.5)(x)\n","    outputs = keras.layers.Dense(1, activation=\"sigmoid\")(x)\n","\n","    model = keras.Model(inputs,outputs)\n","    model.compile(optimizer=\"rmsprop\",loss=\"binary_crossentropy\",metrics=['accuracy'])\n","    return model\n","\n","model_embed = build_model_embed()\n","\n","keras.utils.plot_model(model_embed, show_shapes=True)"],"metadata":{"id":"TtwJKFiyUMjk","executionInfo":{"status":"aborted","timestamp":1647396338129,"user_tz":240,"elapsed":8,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["k = 4\n","num_validation_samples = len(data_train) // k\n","num_epochs = 25\n","batch_sizes = 25\n","all_loss_histories = []\n","all_val_loss_histories = []  \n","all_acc_histories = []\n","all_val_acc_histories = []\n","\n","# For each validation fold, we will train a full set of epochs, and store the history. \n","for fold in range(k):\n","    validation_data = data_train[num_validation_samples * fold:\n","                           num_validation_samples * (fold + 1)]\n","    validation_targets = labels_train[num_validation_samples * fold:\n","                           num_validation_samples * (fold + 1)]\n","    training_data = np.concatenate([\n","        data_train[:num_validation_samples * fold],\n","        data_train[num_validation_samples * (fold + 1):]])\n","    training_targets = np.concatenate([\n","        labels_train[:num_validation_samples * fold],\n","        labels_train[num_validation_samples * (fold + 1):]])\n","    model = build_model_embed()\n","    history = model.fit(training_data, training_targets, \n","                        validation_data = (validation_data,validation_targets), \n","                        epochs=num_epochs, batch_size=batch_sizes)\n","    val_loss_history = history.history['val_loss']\n","    val_acc_history = history.history['val_accuracy']\n","    loss_history = history.history['loss']\n","    acc_history = history.history['accuracy']\n","    all_val_loss_histories.append(val_loss_history)\n","    all_loss_histories.append(loss_history)\n","    all_val_acc_histories.append(val_acc_history)\n","    all_acc_histories.append(acc_history)\n","\n","average_loss_history = [np.mean([x[i] for x in all_loss_histories]) for i in range(num_epochs)]\n","average_val_loss_history = [np.mean([x[i] for x in all_val_loss_histories]) for i in range(num_epochs)]\n","average_acc_history = [np.mean([x[i] for x in all_acc_histories]) for i in range(num_epochs)]\n","average_val_acc_history = [np.mean([x[i] for x in all_val_acc_histories]) for i in range(num_epochs)]"],"metadata":{"id":"LO6D5LoQKM82","executionInfo":{"status":"aborted","timestamp":1647396338129,"user_tz":240,"elapsed":8,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt \n","plt.style.use('ggplot')\n","\n","plt.plot(average_loss_history,c='r')\n","plt.plot(average_acc_history,c=\"r\",linestyle=\"dashed\")\n","plt.plot(average_val_loss_history,c='b')\n","plt.plot(average_val_acc_history,c='b',linestyle=\"dashed\")\n","plt.xlabel(\"Epochs\")\n","plt.legend(['Training Loss','Training Accuracy','Validation Loss','Validation Accuracy'])\n","plt.show()"],"metadata":{"id":"Ys1ONyKaKPgn","executionInfo":{"status":"aborted","timestamp":1647396338129,"user_tz":240,"elapsed":8,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_embed = build_model_embed()\n","model_embed.fit(data_train,labels_train,epochs=9,batch_size=25)\n","\n","test_acc = model_embed.evaluate(data_test,labels_test)[1]*100\n","print(f'The resulting model is about {test_acc:.2f}% accurate in the holdout sample.')"],"metadata":{"id":"L3R5T5f_KUm7","executionInfo":{"status":"aborted","timestamp":1647396338129,"user_tz":240,"elapsed":8,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Clustering"],"metadata":{"id":"58R-PUSLIiK0"}},{"cell_type":"code","source":[""],"metadata":{"id":"hEL9YMJIIyyJ","executionInfo":{"status":"aborted","timestamp":1647396338130,"user_tz":240,"elapsed":9,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"7oGy1NHCIy-p","executionInfo":{"status":"aborted","timestamp":1647396338130,"user_tz":240,"elapsed":9,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Sentiment analysis"],"metadata":{"id":"1C7IiWreIvGK"}},{"cell_type":"code","source":[""],"metadata":{"id":"6jsJ1__DIzhQ","executionInfo":{"status":"aborted","timestamp":1647396338130,"user_tz":240,"elapsed":9,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"pjwqZ6NRIzbU","executionInfo":{"status":"aborted","timestamp":1647396338130,"user_tz":240,"elapsed":9,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Word Cloud"],"metadata":{"id":"DGUCZkIoI3FY"}},{"cell_type":"code","source":[""],"metadata":{"id":"q9gOA5goi8wD","executionInfo":{"status":"aborted","timestamp":1647396338130,"user_tz":240,"elapsed":9,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"Gm3mqAmRi8kD","executionInfo":{"status":"aborted","timestamp":1647396338131,"user_tz":240,"elapsed":10,"user":{"displayName":"Yilun Wang","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12667714364550598412"}}},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"name":"“Copy of BA865_TeamReal_FakeJobAnalytics.ipynb”的副本","provenance":[{"file_id":"1iMlx1fECVpVKjiGdMB5oomK80Abx2zNa","timestamp":1647391905289},{"file_id":"1y34UhvyW-fp3Oqfe626N8i1vztMFRRDg","timestamp":1646853984041}],"collapsed_sections":["Zbgt5LRsiP_G"],"toc_visible":true,"machine_shape":"hm"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}